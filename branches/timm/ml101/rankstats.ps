%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Enscript Output
%%For: timm
%%Creator: GNU enscript 1.6.4
%%CreationDate: Thu Nov  4 15:06:25 2010
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 4
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 4
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 7 7 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6 4

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 744 def
/d_page_h 536 def
/d_header_x 0 def
/d_header_y 521 def
/d_header_w 744 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 744 def
/d_footer_h 0 def
/d_output_w 744 def
/d_output_h 521 def
/cols 2 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
90 rotate
24 -574 translate
/pagenum 1 def
/fname (rankstats.lisp) def
/fdir () def
/ftail (rankstats.lisp) def
% User defined strings:
/fmodstr (Thu Nov 04 15:06:24 2010) def
/pagenumstr (1) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 511 M (1:) s
35.4 511 M
(\(load "deftest.lisp"\)) s
22.8 503 M (2:) s
35.4 503 M
(\(load "macros.lisp"\)) s
22.8 495 M (3:) s
35.4 495 M
(\(load "random.lisp"\)) s
22.8 487 M (4:) s
35.4 487 M
(\(load "lib.lisp"\)) s
22.8 479 M (5:) s
35.4 479 M
(\(load "line.lisp"\)) s
22.8 471 M (6:) s
22.8 463 M (7:) s
35.4 463 M
(\(defun gen-rank-ht \(l &optional \(ranks \(make-hash-table\)\) \(n 0\)\)) s
22.8 455 M (8:) s
35.4 455 M
(  \(if \(null l\)) s
22.8 447 M (9:) s
35.4 447 M
(      ranks) s
18.6 439 M (10:) s
35.4 439 M
(      \(let \(repeats sum now\)) s
18.6 431 M (11:) s
35.4 431 M
(        \(labels \(\(walk \(\) \(incf n\) \(pop l\)\)) s
18.6 423 M (12:) s
35.4 423 M
(                 \(new  \(\) \(setf repeats 1\) \(setf sum n\)\)) s
18.6 415 M (13:) s
35.4 415 M
(                 \(same \(\) \(incf sum n\) \(incf repeats\)\)) s
18.6 407 M (14:) s
35.4 407 M
(                 \(spin \(\) \(when \(eql now \(car l\)\)) s
18.6 399 M (15:) s
35.4 399 M
(                            \(walk\) \(same\) \(spin\)\)\)\)) s
18.6 391 M (16:) s
35.4 391 M
(          \(setf now \(walk\)\)) s
18.6 383 M (17:) s
35.4 383 M
(          \(new\)) s
18.6 375 M (18:) s
35.4 375 M
(          \(spin\)) s
18.6 367 M (19:) s
35.4 367 M
(          \(setf \(gethash now ranks\) \(/ sum repeats\)\)) s
18.6 359 M (20:) s
35.4 359 M
(          \(gen-rank-ht l ranks n\)\)\)\)\)) s
18.6 351 M (21:) s
18.6 343 M (22:) s
35.4 343 M
(#| \(maphash #'\(lambda \(k v\) \(print `\(,k ,v\)\)\) ) s
18.6 335 M (23:) s
35.4 335 M
(         \(gen-rank-ht '\(87 78 8 8 7 6 6 6 6 6 6 4 4 4 4 3 3 3 3 3 3 2 1\)\)\)) s
18.6 327 M (24:) s
35.4 327 M
(\(rank '\(87 78 8 8 7 6 6 6 6 6 6 4 4 4 4 3 3 3 3 3 3 2 1\)\) |#) s
18.6 319 M (25:) s
35.4 319 M
(\(defun rank \(list-of-numbers &optional \(sort-fn #'>\)\)) s
18.6 311 M (26:) s
35.4 311 M
(  "Returns a list of the elements of l ranked.  Ties get the average rank") s
18.6 303 M (27:) s
35.4 303 M
(  \(let \(\(rank-ht \(gen-rank-ht \(sort \(copy-list list-of-numbers\) sort-fn\)\)\)\)) s
18.6 295 M (28:) s
35.4 295 M
(    \(mapcar #'\(lambda \(x\) \(float \(gethash x rank-ht\)\)\) list-of-numbers\)\)\)) s
18.6 287 M (29:) s
18.6 279 M (30:) s
35.4 279 M
(\(defun mann-whitney-demo \(\)) s
18.6 271 M (31:) s
35.4 271 M
(  "Performs a Mann-Whitney test.") s
18.6 263 M (32:) s
35.4 263 M
(  \(mann-whitney '\(4.6 4.7 4.9 5.1 5.2 5.5 5.8 6.1 6.5 6.5 7.2\)) s
18.6 255 M (33:) s
35.4 255 M
(                '\(5.2 5.3 5.4 5.6 6.2 6.3 6.8 7.7 8.0 8.1\)\)\)) s
18.6 247 M (34:) s
18.6 239 M (35:) s
18.6 231 M (36:) s
35.4 231 M
(\(defun mann-whitney \(a b &optional \(conf 95\) \(up t\)\)) s
18.6 223 M (37:) s
35.4 223 M
(  "Performs a Mann-Whitney test as described in method 1 of) s
18.6 215 M (38:) s
35.4 215 M
(   http://faculty.vassar.edu/lowry/ch11a.html.") s
18.6 207 M (39:) s
35.4 207 M
(  \(labels \(\(as-ranks \(l r\) \(mapcar #'\(lambda \(x\) \(gethash x r\)\) l\)\)) s
18.6 199 M (40:) s
35.4 199 M
(           \(sum      \(l\)   \(let \(\(s 0\)\) \(dolist \(x l s\) \(incf s x\)\)\)\)\)) s
18.6 191 M (41:) s
35.4 191 M
(    \(let* \(\(all    \(sort \(copy-list \(append a b\)\) #'<\)\)) s
18.6 183 M (42:) s
35.4 183 M
(           \(ranks  \(gen-rank-ht all\)\)) s
18.6 175 M (43:) s
35.4 175 M
(           \(ranksa \(as-ranks a ranks\)\)) s
18.6 167 M (44:) s
35.4 167 M
(           ;\(ranksb \(as-ranks b ranks\)\)) s
18.6 159 M (45:) s
35.4 159 M
(           \(na     \(length a\)\)) s
18.6 151 M (46:) s
35.4 151 M
(           \(nb     \(length b\)\)) s
18.6 143 M (47:) s
35.4 143 M
(           \(n      \(+ na nb\)\)) s
18.6 135 M (48:) s
35.4 135 M
(           \(tcrit  \(tcritical n conf\)\)) s
18.6 127 M (49:) s
35.4 127 M
(           \(suma   \(* 1.0 \(sum ranksa\)\)\)) s
18.6 119 M (50:) s
35.4 119 M
(           \(ta     \(/ \(* na \(+ n 1\)\) 2.0\)\)) s
18.6 111 M (51:) s
35.4 111 M
(           \(sigma  \(sqrt \(/  \(* na nb \(+ n 1\)\) 12.0\)\)\)) s
18.6 103 M (52:) s
35.4 103 M
(           \(za     \(/ \(+ \(- suma ta\) 0.5\) sigma\)\)\)) s
18.6 95 M (53:) s
35.4 95 M
(      \(if \(< \(abs za\) tcrit\)) s
18.6 87 M (54:) s
35.4 87 M
(          nil) s
18.6 79 M (55:) s
35.4 79 M
(          \(let \(\(less-than \(< \(median a\)) s
18.6 71 M (56:) s
35.4 71 M
(                              \(median b\)\)\)\)) s
18.6 63 M (57:) s
35.4 63 M
(            \(if up) s
18.6 55 M (58:) s
35.4 55 M
(                \(if less-than -1  1\)) s
18.6 47 M (59:) s
35.4 47 M
(                \(if less-than  1 -1\)\)\)\)\)\)\)  ) s
18.6 39 M (60:) s
18.6 31 M (61:) s
18.6 23 M (62:) s
18.6 15 M (63:) s
18.6 7 M (64:) s
390.6 511 M (65:) s
407.4 511 M
(\(defun wilcoxon \(pop1 pop2 &optional \(conf 95\) \(up t\)\)) s
390.6 503 M (66:) s
407.4 503 M
(  \(let \(\(n 0\) diffs abs-diffs\) ;no defined for n less than 10) s
390.6 495 M (67:) s
407.4 495 M
(    \(mapcar #'\(lambda \(p1 p2\)) s
390.6 487 M (68:) s
407.4 487 M
(                \(let \(\(delta \(- p1 p2\)\)\)) s
390.6 479 M (69:) s
407.4 479 M
(                  \(when  \(not \(zerop delta\)\)) s
390.6 471 M (70:) s
407.4 471 M
(                      \(incf n\)) s
390.6 463 M (71:) s
407.4 463 M
(                      \(push delta diffs\)) s
390.6 455 M (72:) s
407.4 455 M
(                      \(push \(abs delta\) abs-diffs\)) s
390.6 447 M (73:) s
407.4 447 M
(                      \)\)\)) s
390.6 439 M (74:) s
407.4 439 M
(            pop1 pop2\)) s
390.6 431 M (75:) s
407.4 431 M
(    \(if \(< n 10\)) s
390.6 423 M (76:) s
407.4 423 M
(        0) s
390.6 415 M (77:) s
407.4 415 M
(        \(let \(\(ranks \(gen-rank-ht abs-diffs\)\)) s
390.6 407 M (78:) s
407.4 407 M
(              \(tcrit \(tcritical n conf\)\)) s
390.6 399 M (79:) s
407.4 399 M
(              sigma z) s
390.6 391 M (80:) s
407.4 391 M
(              \(w 0\)\)) s
390.6 383 M (81:) s
407.4 383 M
(          \(doitems \(abs-diff pos abs-diffs\)) s
390.6 375 M (82:) s
407.4 375 M
(            \(let \(\(w0 \(gethash abs-diff ranks\)\)\)) s
390.6 367 M (83:) s
407.4 367 M
(              \(if   \(< 0 \(nth pos diffs\)\)) s
390.6 359 M (84:) s
407.4 359 M
(                    \(incf w \(* -1 w0\)\)) s
390.6 351 M (85:) s
407.4 351 M
(                    \(incf w w0\)\)\)\)) s
390.6 343 M (86:) s
407.4 343 M
(          \(setf sigma \(sqrt \(/) s
390.6 335 M (87:) s
407.4 335 M
(                             \(* n \(+ n 1\) \(+ 1 \(* 2 n\)\)\)) s
390.6 327 M (88:) s
407.4 327 M
(                             6\)\)\)) s
390.6 319 M (89:) s
407.4 319 M
(          \(setf z \(/ \(- w 0.5\) sigma\)\)) s
390.6 311 M (90:) s
407.4 311 M
(          \(if \(and \(> z  0\)) s
390.6 303 M (91:) s
407.4 303 M
(                   \(<= z tcrit\)\)) s
390.6 295 M (92:) s
407.4 295 M
(              nil) s
390.6 287 M (93:) s
407.4 287 M
(              \(let \(\(less-than \(< \(median pop1\)) s
390.6 279 M (94:) s
407.4 279 M
(                                  \(median pop2\)\)\)\)) s
390.6 271 M (95:) s
407.4 271 M
(                \(if up) s
390.6 263 M (96:) s
407.4 263 M
(                    \(if less-than -1  1\)) s
390.6 255 M (97:) s
407.4 255 M
(                    \(if less-than  1 -1\)\)\)\)\)\)\)\)) s
390.6 247 M (98:) s
390.6 239 M (99:) s
407.4 239 M
(;;;http://faculty.vassar.edu/lowry/ch12a.html) s
386.4 231 M (100:) s
407.4 231 M
(\(Defun mann-whitney-demo-big \(&optional \(fudge 1\)\)) s
386.4 223 M (101:) s
407.4 223 M
(  "Generates two lists of 10,000 random ints.  Multiplies the second list by) s
386.4 215 M (102:) s
407.4 215 M
(   fudge.  Performs a Mann-Whitney test on the two lists.") s
386.4 207 M (103:) s
407.4 207 M
(  \(reset-seed\)) s
386.4 199 M (104:) s
407.4 199 M
(  \(labels \(\(big \(n s\) \(let \(out\) \(dotimes \(i n out\)) s
386.4 191 M (105:) s
407.4 191 M
(                                                \(push \(expt \(randf 1.0\) s\) out) s
377 183 M
(\)\)\)\)\)) s
386.4 175 M (106:) s
407.4 175 M
(    \(mann-whitney \(big 100 fudge\)) s
386.4 167 M (107:) s
407.4 167 M
(                  \(big 100 1\)) s
386.4 159 M (108:) s
407.4 159 M
(                  95\)\)\)) s
386.4 151 M (109:) s
386.4 143 M (110:) s
407.4 143 M
(\(defun wilcoxon-demo-big \(&optional \(fudge 1\)\)) s
386.4 135 M (111:) s
407.4 135 M
(  "Generates two lists of 10,000 random ints.  Multiplies the second list by) s
386.4 127 M (112:) s
407.4 127 M
(   fudge.  Performs a Wilcoxon test on the two lists.") s
386.4 119 M (113:) s
407.4 119 M
(  \(reset-seed\)) s
386.4 111 M (114:) s
407.4 111 M
(  \(labels \(\(big \(n s\) \(let \(out\)) s
386.4 103 M (115:) s
407.4 103 M
(                        \(dotimes \(i n out\)) s
386.4 95 M (116:) s
407.4 95 M
(                          \(push \(expt \(randf 1.0\) s\) out\)\)\)\)\)) s
386.4 87 M (117:) s
407.4 87 M
(    \(wilcoxon \(big 100 fudge\)) s
386.4 79 M (118:) s
407.4 79 M
(              \(big 100 1\)) s
386.4 71 M (119:) s
407.4 71 M
(              95\)\)\)) s
386.4 63 M (120:) s
386.4 55 M (121:) s
407.4 55 M
(\(deftest !mann-whitney1 \(\) \(test \(mann-whitney-demo-big   1\)  nil\)\)) s
386.4 47 M (122:) s
407.4 47 M
(\(deftest !mann-whitney2 \(\) \(test \(mann-whitney-demo-big 0.5\)    1\)\)) s
386.4 39 M (123:) s
407.4 39 M
(\(deftest !mann-whitney3 \(\) \(test \(mann-whitney-demo-big   2\)   -1\)\)) s
386.4 31 M (124:) s
407.4 31 M
(\(deftest !wilcoxon1     \(\) \(test \(wilcoxon-demo-big   1\)  nil\)\)) s
386.4 23 M (125:) s
407.4 23 M
(\(deftest !wilcoxon2     \(\) \(test \(wilcoxon-demo-big 0.5\)    1\)\)) s
386.4 15 M (126:) s
407.4 15 M
(\(deftest !wilcoxon3     \(\) \(test \(wilcoxon-demo-big   2\)   -1\)\)) s
_R
S
%%Trailer
%%Pages: 1
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
