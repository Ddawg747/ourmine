%!PS-Adobe-2.0 EPSF-2.0
%%Title: proj2/HyperPipes/Plots/segment.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sat Oct 10 05:54:03 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (proj2/HyperPipes/Plots/segment.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Adam,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 10 05:54:03 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
2018 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2018 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 500)]
] -40.0 MCshow
1.000 UL
LTb
3281 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3281 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1000)]
] -40.0 MCshow
1.000 UL
LTb
4543 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4543 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1500)]
] -40.0 MCshow
1.000 UL
LTb
5806 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5806 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2000)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2500)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (segment)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6501 1467 M
[ [(Helvetica) 120.0 0.0 true true 0 (Baseline)]
] -40.0 MRshow
LT0
872 2439 Pls
988 2952 Pls
1104 3186 Pls
1221 3396 Pls
1337 3597 Pls
1453 3684 Pls
1569 3746 Pls
1685 3839 Pls
1801 3902 Pls
1917 3942 Pls
2034 3992 Pls
2150 4034 Pls
2266 4055 Pls
2382 4073 Pls
2498 4101 Pls
2614 4120 Pls
2730 4147 Pls
2847 4177 Pls
2963 4198 Pls
3079 4213 Pls
3195 4226 Pls
3311 4243 Pls
3427 4250 Pls
3543 4260 Pls
3660 4277 Pls
3776 4285 Pls
3892 4296 Pls
4008 4310 Pls
4124 4319 Pls
4240 4328 Pls
4356 4340 Pls
4473 4347 Pls
4589 4355 Pls
4705 4361 Pls
4821 4365 Pls
4937 4361 Pls
5053 4367 Pls
5169 4373 Pls
5285 4381 Pls
5402 4383 Pls
5518 4386 Pls
5634 4386 Pls
5750 4391 Pls
5866 4398 Pls
5982 4402 Pls
6098 4408 Pls
6215 4412 Pls
6331 4415 Pls
6447 4417 Pls
6563 4422 Pls
6748 1467 Pls
1.000 UP
1.000 UL
LT1
LTb
6501 1347 M
[ [(Helvetica) 120.0 0.0 true true 0 (Naive Bayes)]
] -40.0 MRshow
LT1
872 1411 Crs
988 1645 Crs
1104 1660 Crs
1221 1902 Crs
1337 1916 Crs
1453 1972 Crs
1569 2052 Crs
1685 2147 Crs
1801 2241 Crs
1917 2336 Crs
2034 2464 Crs
2150 2548 Crs
2266 2625 Crs
2382 2672 Crs
2498 2706 Crs
2614 2701 Crs
2730 2746 Crs
2847 2802 Crs
2963 2822 Crs
3079 2878 Crs
3195 2888 Crs
3311 2897 Crs
3427 2926 Crs
3543 2944 Crs
3660 2980 Crs
3776 2985 Crs
3892 3006 Crs
4008 3029 Crs
4124 3060 Crs
4240 3092 Crs
4356 3125 Crs
4473 3142 Crs
4589 3166 Crs
4705 3177 Crs
4821 3183 Crs
4937 3206 Crs
5053 3219 Crs
5169 3228 Crs
5285 3231 Crs
5402 3244 Crs
5518 3250 Crs
5634 3259 Crs
5750 3281 Crs
5866 3294 Crs
5982 3304 Crs
6098 3312 Crs
6215 3329 Crs
6331 3334 Crs
6447 3346 Crs
6563 3356 Crs
6748 1347 Crs
1.000 UP
1.000 UL
LT2
LTb
6501 1227 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT2
872 2345 Star
988 2859 Star
1104 3061 Star
1221 3302 Star
1337 3466 Star
1453 3544 Star
1569 3613 Star
1685 3699 Star
1801 3736 Star
1917 3755 Star
2034 3797 Star
2150 3839 Star
2266 3818 Star
2382 3826 Star
2498 3846 Star
2614 3875 Star
2730 3900 Star
2847 3922 Star
2963 3948 Star
3079 3956 Star
3195 3960 Star
3311 3975 Star
3427 3973 Star
3543 3976 Star
3660 3985 Star
3776 3994 Star
3892 4009 Star
4008 4026 Star
4124 4029 Star
4240 4036 Star
4356 4044 Star
4473 4058 Star
4589 4055 Star
4705 4054 Star
4821 4048 Star
4937 4039 Star
5053 4031 Star
5169 4034 Star
5285 4033 Star
5402 4031 Star
5518 4019 Star
5634 4017 Star
5750 4015 Star
5866 4018 Star
5982 4010 Star
6098 4010 Star
6215 4010 Star
6331 4011 Star
6447 4005 Star
6563 4006 Star
6748 1227 Star
1.000 UP
1.000 UL
LT3
LTb
6501 1107 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 0)]
] -40.0 MRshow
LT3
872 2345 Box
988 2672 Box
1104 2906 Box
1221 2952 Box
1337 3036 Box
1453 3108 Box
1569 3186 Box
1685 3221 Box
1801 3279 Box
1917 3242 Box
2034 3254 Box
2150 3256 Box
2266 3279 Box
2382 3272 Box
2498 3273 Box
2614 3273 Box
2730 3301 Box
2847 3326 Box
2963 3348 Box
3079 3377 Box
3195 3386 Box
3311 3398 Box
3427 3397 Box
3543 3400 Box
3660 3421 Box
3776 3437 Box
3892 3431 Box
4008 3449 Box
4124 3447 Box
4240 3457 Box
4356 3460 Box
4473 3466 Box
4589 3463 Box
4705 3460 Box
4821 3450 Box
4937 3432 Box
5053 3436 Box
5169 3434 Box
5285 3437 Box
5402 3440 Box
5518 3443 Box
5634 3441 Box
5750 3440 Box
5866 3443 Box
5982 3443 Box
6098 3446 Box
6215 3442 Box
6331 3445 Box
6447 3443 Box
6563 3440 Box
6748 1107 Box
1.000 UP
1.000 UL
LT4
LTb
6501 987 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 1)]
] -40.0 MRshow
LT4
872 2252 BoxF
988 2625 BoxF
1104 2843 BoxF
1221 2859 BoxF
1337 2887 BoxF
1453 2921 BoxF
1569 2946 BoxF
1685 2976 BoxF
1801 3020 BoxF
1917 3008 BoxF
2034 3007 BoxF
2150 2999 BoxF
2266 3013 BoxF
2382 2972 BoxF
2498 2955 BoxF
2614 2941 BoxF
2730 2961 BoxF
2847 2999 BoxF
2963 3024 BoxF
3079 3050 BoxF
3195 3061 BoxF
3311 3075 BoxF
3427 3072 BoxF
3543 3077 BoxF
3660 3100 BoxF
3776 3110 BoxF
3892 3096 BoxF
4008 3102 BoxF
4124 3102 BoxF
4240 3108 BoxF
4356 3110 BoxF
4473 3116 BoxF
4589 3121 BoxF
4705 3117 BoxF
4821 3111 BoxF
4937 3090 BoxF
5053 3095 BoxF
5169 3090 BoxF
5285 3088 BoxF
5402 3078 BoxF
5518 3081 BoxF
5634 3081 BoxF
5750 3075 BoxF
5866 3080 BoxF
5982 3078 BoxF
6098 3082 BoxF
6215 3076 BoxF
6331 3075 BoxF
6447 3077 BoxF
6563 3077 BoxF
6748 987 BoxF
1.000 UP
1.000 UL
LT5
LTb
6501 867 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT5
872 2252 Circle
988 2765 Circle
1104 3030 Circle
1221 3209 Circle
1337 3410 Circle
1453 3497 Circle
1569 3573 Circle
1685 3653 Circle
1801 3663 Circle
1917 3690 Circle
2034 3729 Circle
2150 3785 Circle
2266 3775 Circle
2382 3786 Circle
2498 3796 Circle
2614 3810 Circle
2730 3828 Circle
2847 3839 Circle
2963 3859 Circle
3079 3858 Circle
3195 3862 Circle
3311 3869 Circle
3427 3876 Circle
3543 3878 Circle
3660 3892 Circle
3776 3897 Circle
3892 3895 Circle
4008 3910 Circle
4124 3901 Circle
4240 3905 Circle
4356 3915 Circle
4473 3930 Circle
4589 3927 Circle
4705 3925 Circle
4821 3922 Circle
4937 3915 Circle
5053 3913 Circle
5169 3908 Circle
5285 3907 Circle
5402 3903 Circle
5518 3878 Circle
5634 3875 Circle
5750 3876 Circle
5866 3865 Circle
5982 3854 Circle
6098 3856 Circle
6215 3851 Circle
6331 3847 Circle
6447 3839 Circle
6563 3836 Circle
6748 867 Circle
1.000 UP
1.000 UL
LT6
LTb
6501 747 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT6
872 2719 CircleF
988 3232 CircleF
1104 3466 CircleF
1221 3606 CircleF
1337 3765 CircleF
1453 3871 CircleF
1569 3933 CircleF
1685 4015 CircleF
1801 4089 CircleF
1917 4129 CircleF
2034 4179 CircleF
2150 4213 CircleF
2266 4235 CircleF
2382 4253 CircleF
2498 4282 CircleF
2614 4295 CircleF
2730 4317 CircleF
2847 4338 CircleF
2963 4351 CircleF
3079 4367 CircleF
3195 4373 CircleF
3311 4387 CircleF
3427 4388 CircleF
3543 4396 CircleF
3660 4407 CircleF
3776 4418 CircleF
3892 4424 CircleF
4008 4433 CircleF
4124 4438 CircleF
4240 4447 CircleF
4356 4454 CircleF
4473 4458 CircleF
4589 4465 CircleF
4705 4471 CircleF
4821 4477 CircleF
4937 4470 CircleF
5053 4476 CircleF
5169 4478 CircleF
5285 4484 CircleF
5402 4486 CircleF
5518 4491 CircleF
5634 4489 CircleF
5750 4493 CircleF
5866 4497 CircleF
5982 4502 CircleF
6098 4505 CircleF
6215 4509 CircleF
6331 4511 CircleF
6447 4514 CircleF
6563 4517 CircleF
6748 747 CircleF
1.000 UP
1.000 UL
LT7
LTb
6501 627 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT7
872 2999 TriU
988 3466 TriU
1104 3715 TriU
1221 3910 TriU
1337 4045 TriU
1453 4151 TriU
1569 4200 TriU
1685 4260 TriU
1801 4306 TriU
1917 4344 TriU
2034 4374 TriU
2150 4392 TriU
2266 4414 TriU
2382 4433 TriU
2498 4450 TriU
2614 4464 TriU
2730 4477 TriU
2847 4488 TriU
2963 4498 TriU
3079 4507 TriU
3195 4515 TriU
3311 4523 TriU
3427 4526 TriU
3543 4532 TriU
3660 4538 TriU
3776 4544 TriU
3892 4545 TriU
4008 4550 TriU
4124 4551 TriU
4240 4555 TriU
4356 4559 TriU
4473 4563 TriU
4589 4567 TriU
4705 4570 TriU
4821 4573 TriU
4937 4574 TriU
5053 4577 TriU
5169 4577 TriU
5285 4579 TriU
5402 4582 TriU
5518 4584 TriU
5634 4582 TriU
5750 4584 TriU
5866 4587 TriU
5982 4589 TriU
6098 4591 TriU
6215 4593 TriU
6331 4594 TriU
6447 4596 TriU
6563 4598 TriU
6748 627 TriU
1.000 UP
1.000 UL
LT8
LTb
6501 507 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT8
872 3373 TriUF
988 3886 TriUF
1104 4120 TriUF
1221 4260 TriUF
1337 4325 TriUF
1453 4384 TriUF
1569 4427 TriUF
1685 4458 TriUF
1801 4483 TriUF
1917 4503 TriUF
2034 4519 TriUF
2150 4532 TriUF
2266 4544 TriUF
2382 4553 TriUF
2498 4562 TriUF
2614 4569 TriUF
2730 4576 TriUF
2847 4581 TriUF
2963 4587 TriUF
3079 4591 TriUF
3195 4596 TriUF
3311 4599 TriUF
3427 4603 TriUF
3543 4606 TriUF
3660 4609 TriUF
3776 4612 TriUF
3892 4614 TriUF
4008 4617 TriUF
4124 4619 TriUF
4240 4621 TriUF
4356 4623 TriUF
4473 4625 TriUF
4589 4626 TriUF
4705 4628 TriUF
4821 4629 TriUF
4937 4631 TriUF
5053 4632 TriUF
5169 4633 TriUF
5285 4635 TriUF
5402 4636 TriUF
5518 4637 TriUF
5634 4638 TriUF
5750 4639 TriUF
5866 4640 TriUF
5982 4641 TriUF
6098 4641 TriUF
6215 4642 TriUF
6331 4643 TriUF
6447 4644 TriUF
6563 4645 TriUF
6748 507 TriUF
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
