%!PS-Adobe-2.0 EPSF-2.0
%%Title: proj2/HyperPipes/Plots/primary-tumor.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Thu Oct 22 18:36:15 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (proj2/HyperPipes/Plots/primary-tumor.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Adam 2,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Oct 22 18:36:15 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1658 384 M
0 63 V
0 4233 R
0 -63 V
stroke
1658 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 50)]
] -40.0 MCshow
1.000 UL
LTb
2559 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2559 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
3461 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3461 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 150)]
] -40.0 MCshow
1.000 UL
LTb
4363 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4363 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
5265 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5265 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 250)]
] -40.0 MCshow
1.000 UL
LTb
6166 384 M
0 63 V
0 4233 R
0 -63 V
stroke
6166 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 300)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 350)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (primary-tumor)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1620 4557 M
[ [(Helvetica) 120.0 0.0 true true 0 (MultiPipes)]
] -40.0 MRshow
LT0
864 1816 Crs
972 1782 Crs
1081 1793 Crs
1189 1799 Crs
1297 1659 Crs
1405 1566 Crs
1513 1694 Crs
1622 1773 Crs
1730 1767 Crs
1838 1836 Crs
1946 1770 Crs
2054 1810 Crs
2163 1994 Crs
2271 2064 Crs
2379 2132 Crs
2487 2104 Crs
2595 2141 Crs
2704 2108 Crs
2812 2146 Crs
2920 2172 Crs
3028 2175 Crs
3137 2202 Crs
3245 2283 Crs
3353 2333 Crs
3461 2357 Crs
3569 2335 Crs
3678 2344 Crs
3786 2355 Crs
3894 2385 Crs
4002 2399 Crs
4110 2414 Crs
4219 2439 Crs
4327 2461 Crs
4435 2486 Crs
4543 2462 Crs
4651 2495 Crs
4760 2505 Crs
4868 2512 Crs
4976 2530 Crs
5084 2546 Crs
5192 2534 Crs
5301 2527 Crs
5409 2525 Crs
5517 2554 Crs
5625 2565 Crs
5733 2580 Crs
5842 2576 Crs
5950 2595 Crs
6058 2593 Crs
6166 2602 Crs
6274 2612 Crs
6383 2615 Crs
6491 2588 Crs
6599 2580 Crs
6707 2583 Crs
6816 2584 Crs
1867 4557 Crs
1.000 UP
1.000 UL
LT1
LTb
1620 4437 M
[ [(Helvetica) 120.0 0.0 true true 0 (Naive Bayes)]
] -40.0 MRshow
LT1
864 1816 Crs
972 1100 Crs
1081 861 Crs
1189 921 Crs
1297 1100 Crs
1405 1339 Crs
1513 1305 Crs
1622 1369 Crs
1730 1418 Crs
1838 1386 Crs
1946 1491 Crs
2054 1518 Crs
2163 1596 Crs
2271 1663 Crs
2379 1673 Crs
2487 1682 Crs
2595 1732 Crs
2704 1776 Crs
2812 1816 Crs
2920 1888 Crs
3028 1884 Crs
3137 1849 Crs
3245 1847 Crs
3353 1846 Crs
3461 1873 Crs
3569 1816 Crs
3678 1789 Crs
3786 1842 Crs
3894 1816 Crs
4002 1816 Crs
4110 1816 Crs
4219 1861 Crs
4327 1881 Crs
4435 1879 Crs
4543 1918 Crs
4651 1955 Crs
4760 1971 Crs
4868 1948 Crs
4976 1963 Crs
5084 1977 Crs
5192 1956 Crs
5301 1986 Crs
5409 2016 Crs
5517 2028 Crs
5625 2023 Crs
5733 2003 Crs
5842 2029 Crs
5950 2025 Crs
6058 2021 Crs
6166 2016 Crs
6274 2041 Crs
6383 2078 Crs
6491 2073 Crs
6599 2094 Crs
6707 2102 Crs
6816 2136 Crs
1867 4437 Crs
1.000 UP
1.000 UL
LT2
LTb
1620 4317 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT2
864 1816 Star
972 1458 Star
1081 1577 Star
1189 1637 Star
1297 1530 Star
1405 1458 Star
1513 1509 Star
1622 1458 Star
1730 1339 Star
1838 1458 Star
1946 1425 Star
2054 1398 Star
2163 1486 Star
2271 1611 Star
2379 1673 Star
2487 1682 Star
2595 1690 Star
2704 1617 Star
2812 1590 Star
2920 1565 Star
3028 1543 Star
3137 1523 Star
3245 1505 Star
3353 1488 Star
3461 1501 Star
3569 1513 Star
3678 1524 Star
3786 1509 Star
3894 1520 Star
4002 1506 Star
4110 1493 Star
4219 1480 Star
4327 1512 Star
4435 1521 Star
4543 1489 Star
4651 1498 Star
4760 1545 Star
4868 1533 Star
4976 1522 Star
5084 1512 Star
5192 1502 Star
5301 1475 Star
5409 1466 Star
5517 1474 Star
5625 1466 Star
5733 1474 Star
5842 1466 Star
5950 1458 Star
6058 1465 Star
6166 1472 Star
6274 1479 Star
6383 1472 Star
6491 1465 Star
6599 1458 Star
6707 1451 Star
6816 1445 Star
1867 4317 Star
1.000 UP
1.000 UL
LT1
LTb
1620 4197 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT1
864 1816 Circle
972 1458 Circle
1081 1577 Circle
1189 1637 Circle
1297 1530 Circle
1405 1458 Circle
1513 1509 Circle
1622 1369 Circle
1730 1339 Circle
1838 1315 Circle
1946 1295 Circle
2054 1279 Circle
2163 1320 Circle
2271 1253 Circle
2379 1291 Circle
2487 1279 Circle
2595 1268 Circle
2704 1259 Circle
2812 1288 Circle
2920 1279 Circle
3028 1305 Circle
3137 1295 Circle
3245 1287 Circle
3353 1309 Circle
3461 1329 Circle
3569 1320 Circle
3678 1286 Circle
3786 1279 Circle
3894 1273 Circle
4002 1291 Circle
4110 1285 Circle
4219 1279 Circle
4327 1252 Circle
4435 1226 Circle
4543 1223 Circle
4651 1239 Circle
4760 1216 Circle
4868 1232 Circle
4976 1229 Circle
5084 1207 Circle
5192 1187 Circle
5301 1168 Circle
5409 1183 Circle
5517 1181 Circle
5625 1180 Circle
5733 1162 Circle
5842 1161 Circle
5950 1145 Circle
6058 1129 Circle
6166 1114 Circle
6274 1114 Circle
6383 1100 Circle
6491 1086 Circle
6599 1073 Circle
6707 1061 Circle
6816 1049 Circle
1867 4197 Circle
1.000 UP
1.000 UL
LT3
LTb
1620 4077 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT3
864 1816 Box
972 2089 Box
1081 2225 Box
1189 2123 Box
1297 2191 Box
1405 2106 Box
1513 2137 Box
1622 2298 Box
1730 2297 Box
1838 2344 Box
1946 2225 Box
2054 2202 Box
2163 2322 Box
2271 2335 Box
2379 2400 Box
2487 2415 Box
2595 2472 Box
2704 2439 Box
2812 2424 Box
2920 2411 Box
3028 2444 Box
3137 2478 Box
3245 2517 Box
3353 2552 Box
3461 2573 Box
3569 2591 Box
3678 2594 Box
3786 2572 Box
3894 2592 Box
4002 2601 Box
4110 2611 Box
4219 2620 Box
4327 2616 Box
4435 2630 Box
4543 2593 Box
4651 2601 Box
4760 2604 Box
4868 2599 Box
4976 2591 Box
5084 2582 Box
5192 2565 Box
5301 2548 Box
5409 2542 Box
5517 2546 Box
5625 2537 Box
5733 2534 Box
5842 2520 Box
5950 2516 Box
6058 2517 Box
6166 2511 Box
6274 2505 Box
6383 2495 Box
6491 2476 Box
6599 2473 Box
6707 2464 Box
6816 2457 Box
1867 4077 Box
1.000 UP
1.000 UL
LT8
LTb
1620 3957 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT8
864 1748 Box
972 2293 Box
1081 2293 Box
1189 2327 Box
1297 2280 Box
1405 2310 Box
1513 2332 Box
1622 2374 Box
1730 2407 Box
1838 2454 Box
1946 2355 Box
2054 2342 Box
2163 2354 Box
2271 2315 Box
2379 2332 Box
2487 2334 Box
2595 2329 Box
2704 2290 Box
2812 2241 Box
2920 2237 Box
3028 2232 Box
3137 2234 Box
3245 2227 Box
3353 2219 Box
3461 2246 Box
3569 2236 Box
3678 2218 Box
3786 2208 Box
3894 2209 Box
4002 2206 Box
4110 2210 Box
4219 2204 Box
4327 2182 Box
4435 2173 Box
4543 2163 Box
4651 2156 Box
4760 2151 Box
4868 2139 Box
4976 2124 Box
5084 2114 Box
5192 2093 Box
5301 2070 Box
5409 2052 Box
5517 2049 Box
5625 2034 Box
5733 2027 Box
5842 2015 Box
5950 2004 Box
6058 2000 Box
6166 1987 Box
6274 1976 Box
6383 1963 Box
6491 1947 Box
6599 1940 Box
6707 1931 Box
6816 1920 Box
1867 3957 Box
1.000 UP
1.000 UL
LT4
LTb
1620 3837 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT4
864 1748 Box
972 2225 Box
1081 2134 Box
1189 2038 Box
1297 2068 Box
1405 2015 Box
1513 2025 Box
1622 1991 Box
1730 1986 Box
1838 1973 Box
1946 1903 Box
2054 1879 Box
2163 1861 Box
2271 1809 Box
2379 1782 Box
2487 1752 Box
2595 1722 Box
2704 1685 Box
2812 1646 Box
2920 1627 Box
3028 1603 Box
3137 1588 Box
3245 1573 Box
3353 1559 Box
3461 1558 Box
3569 1545 Box
3678 1531 Box
3786 1523 Box
3894 1515 Box
4002 1508 Box
4110 1500 Box
4219 1492 Box
4327 1479 Box
4435 1474 Box
4543 1467 Box
4651 1465 Box
4760 1458 Box
4868 1453 Box
4976 1443 Box
5084 1436 Box
5192 1422 Box
5301 1406 Box
5409 1390 Box
5517 1377 Box
5625 1364 Box
5733 1352 Box
5842 1339 Box
5950 1328 Box
6058 1318 Box
6166 1308 Box
6274 1297 Box
6383 1286 Box
6491 1273 Box
6599 1262 Box
6707 1252 Box
6816 1240 Box
1867 3837 Box
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
