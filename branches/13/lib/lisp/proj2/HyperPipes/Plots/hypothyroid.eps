%!PS-Adobe-2.0 EPSF-2.0
%%Title: proj2/HyperPipes/Plots/hypothyroid.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Tue Oct 20 18:49:32 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (proj2/HyperPipes/Plots/hypothyroid.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Adam 2,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Oct 20 18:49:32 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1545 384 M
0 63 V
0 4233 R
0 -63 V
stroke
1545 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 500)]
] -40.0 MCshow
1.000 UL
LTb
2334 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2334 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1000)]
] -40.0 MCshow
1.000 UL
LTb
3123 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3123 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1500)]
] -40.0 MCshow
1.000 UL
LTb
3912 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3912 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2000)]
] -40.0 MCshow
1.000 UL
LTb
4701 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4701 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2500)]
] -40.0 MCshow
1.000 UL
LTb
5490 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5490 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 3000)]
] -40.0 MCshow
1.000 UL
LTb
6279 384 M
0 63 V
0 4233 R
0 -63 V
stroke
6279 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 3500)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 4000)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (hypothyroid)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1620 4557 M
[ [(Helvetica) 120.0 0.0 true true 0 (MultiPipes)]
] -40.0 MRshow
LT0
874 4336 Crs
993 4364 Crs
1111 4430 Crs
1229 4462 Crs
1348 4481 Crs
1466 4455 Crs
1584 4470 Crs
1703 4446 Crs
1821 4458 Crs
1940 4468 Crs
2058 4481 Crs
2176 4491 Crs
2295 4500 Crs
2413 4508 Crs
2531 4515 Crs
2650 4525 Crs
2768 4529 Crs
2886 4537 Crs
3005 4544 Crs
3123 4547 Crs
3241 4548 Crs
3360 4550 Crs
3478 4553 Crs
3596 4558 Crs
3715 4562 Crs
3833 4566 Crs
3951 4568 Crs
4070 4571 Crs
4188 4575 Crs
4307 4576 Crs
4425 4579 Crs
4543 4582 Crs
4662 4583 Crs
4780 4585 Crs
4898 4585 Crs
5017 4585 Crs
5135 4586 Crs
5253 4588 Crs
5372 4591 Crs
5490 4591 Crs
5608 4593 Crs
5727 4595 Crs
5845 4597 Crs
5963 4598 Crs
6082 4600 Crs
6200 4600 Crs
6318 4601 Crs
6437 4603 Crs
6555 4604 Crs
6674 4605 Crs
1867 4557 Crs
1.000 UP
1.000 UL
LT1
LTb
1620 4437 M
[ [(Helvetica) 120.0 0.0 true true 0 (Naive Bayes)]
] -40.0 MRshow
LT1
874 4222 Crs
993 4222 Crs
1111 4298 Crs
1229 4308 Crs
1348 4313 Crs
1466 4327 Crs
1584 4328 Crs
1703 4358 Crs
1821 4368 Crs
1940 4382 Crs
2058 4373 Crs
2176 4379 Crs
2295 4389 Crs
2413 4394 Crs
2531 4390 Crs
2650 4390 Crs
2768 4397 Crs
2886 4406 Crs
3005 4397 Crs
3123 4408 Crs
3241 4407 Crs
3360 4412 Crs
3478 4404 Crs
3596 4410 Crs
3715 4412 Crs
3833 4407 Crs
3951 4406 Crs
4070 4408 Crs
4188 4396 Crs
4307 4399 Crs
4425 4395 Crs
4543 4390 Crs
4662 4394 Crs
4780 4394 Crs
4898 4399 Crs
5017 4400 Crs
5135 4401 Crs
5253 4403 Crs
5372 4402 Crs
5490 4399 Crs
5608 4401 Crs
5727 4399 Crs
5845 4399 Crs
5963 4401 Crs
6082 4396 Crs
6200 4397 Crs
6318 4398 Crs
6437 4401 Crs
6555 4403 Crs
6674 4404 Crs
1867 4437 Crs
1.000 UP
1.000 UL
LT2
LTb
1620 4317 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT2
874 4336 Star
993 4336 Star
1111 4413 Star
1229 4451 Star
1348 4474 Star
1466 4451 Star
1584 4467 Star
1703 4444 Star
1821 4457 Star
1940 4468 Star
2058 4482 Star
2176 4494 Star
2295 4504 Star
2413 4508 Star
2531 4516 Star
2650 4526 Star
2768 4528 Star
2886 4537 Star
3005 4544 Star
3123 4545 Star
3241 4546 Star
3360 4550 Star
3478 4553 Star
3596 4558 Star
3715 4563 Star
3833 4568 Star
3951 4570 Star
4070 4574 Star
4188 4577 Star
4307 4579 Star
4425 4582 Star
4543 4583 Star
4662 4585 Star
4780 4587 Star
4898 4587 Star
5017 4588 Star
5135 4589 Star
5253 4591 Star
5372 4593 Star
5490 4593 Star
5608 4595 Star
5727 4597 Star
5845 4599 Star
5963 4601 Star
6082 4600 Star
6200 4599 Star
6318 4601 Star
6437 4601 Star
6555 4602 Star
6674 4603 Star
1867 4317 Star
1.000 UP
1.000 UL
LT1
LTb
1620 4197 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT1
874 4336 Circle
993 4336 Circle
1111 4413 Circle
1229 4451 Circle
1348 4474 Circle
1466 4451 Circle
1584 4467 Circle
1703 4444 Circle
1821 4457 Circle
1940 4468 Circle
2058 4482 Circle
2176 4494 Circle
2295 4504 Circle
2413 4508 Circle
2531 4516 Circle
2650 4526 Circle
2768 4528 Circle
2886 4537 Circle
3005 4544 Circle
3123 4545 Circle
3241 4546 Circle
3360 4550 Circle
3478 4553 Circle
3596 4558 Circle
3715 4563 Circle
3833 4568 Circle
3951 4570 Circle
4070 4574 Circle
4188 4577 Circle
4307 4579 Circle
4425 4582 Circle
4543 4583 Circle
4662 4585 Circle
4780 4587 Circle
4898 4587 Circle
5017 4588 Circle
5135 4589 Circle
5253 4591 Circle
5372 4593 Circle
5490 4593 Circle
5608 4595 Circle
5727 4597 Circle
5845 4599 Circle
5963 4601 Circle
6082 4600 Circle
6200 4599 Circle
6318 4601 Circle
6437 4601 Circle
6555 4602 Circle
6674 4603 Circle
1867 4197 Circle
1.000 UP
1.000 UL
LT3
LTb
1620 4077 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT3
874 4375 Box
993 4400 Box
1111 4447 Box
1229 4470 Box
1348 4473 Box
1466 4471 Box
1584 4477 Box
1703 4473 Box
1821 4474 Box
1940 4477 Box
2058 4478 Box
2176 4478 Box
2295 4478 Box
2413 4476 Box
2531 4475 Box
2650 4475 Box
2768 4474 Box
2886 4472 Box
3005 4472 Box
3123 4471 Box
3241 4467 Box
3360 4467 Box
3478 4462 Box
3596 4462 Box
3715 4461 Box
3833 4460 Box
3951 4459 Box
4070 4458 Box
4188 4457 Box
4307 4456 Box
4425 4455 Box
4543 4453 Box
4662 4453 Box
4780 4453 Box
4898 4452 Box
5017 4452 Box
5135 4450 Box
5253 4449 Box
5372 4448 Box
5490 4447 Box
5608 4447 Box
5727 4447 Box
5845 4446 Box
5963 4446 Box
6082 4446 Box
6200 4445 Box
6318 4445 Box
6437 4444 Box
6555 4444 Box
6674 4443 Box
1867 4077 Box
1.000 UP
1.000 UL
LT8
LTb
1620 3957 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT8
874 4345 Box
993 4330 Box
1111 4322 Box
1229 4315 Box
1348 4310 Box
1466 4304 Box
1584 4300 Box
1703 4297 Box
1821 4294 Box
1940 4292 Box
2058 4290 Box
2176 4288 Box
2295 4287 Box
2413 4286 Box
2531 4285 Box
2650 4284 Box
2768 4284 Box
2886 4283 Box
3005 4282 Box
3123 4282 Box
3241 4279 Box
3360 4278 Box
3478 4277 Box
3596 4276 Box
3715 4275 Box
3833 4275 Box
3951 4274 Box
4070 4274 Box
4188 4274 Box
4307 4273 Box
4425 4273 Box
4543 4272 Box
4662 4272 Box
4780 4272 Box
4898 4272 Box
5017 4271 Box
5135 4267 Box
5253 4262 Box
5372 4257 Box
5490 4253 Box
5608 4248 Box
5727 4245 Box
5845 4241 Box
5963 4237 Box
6082 4234 Box
6200 4230 Box
6318 4227 Box
6437 4223 Box
6555 4221 Box
6674 4218 Box
1867 3957 Box
1.000 UP
1.000 UL
LT4
LTb
1620 3837 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT4
874 4257 Box
993 4264 Box
1111 4266 Box
1229 4267 Box
1348 4268 Box
1466 4269 Box
1584 4269 Box
1703 4269 Box
1821 4269 Box
1940 4269 Box
2058 4270 Box
2176 4270 Box
2295 4270 Box
2413 4270 Box
2531 4270 Box
2650 4270 Box
2768 4270 Box
2886 4270 Box
3005 4270 Box
3123 4270 Box
3241 4259 Box
3360 4250 Box
3478 4242 Box
3596 4235 Box
3715 4228 Box
3833 4222 Box
3951 4216 Box
4070 4211 Box
4188 4206 Box
4307 4201 Box
4425 4197 Box
4543 4193 Box
4662 4189 Box
4780 4185 Box
4898 4182 Box
5017 4179 Box
5135 4176 Box
5253 4173 Box
5372 4170 Box
5490 4167 Box
5608 4165 Box
5727 4163 Box
5845 4160 Box
5963 4158 Box
6082 4156 Box
6200 4154 Box
6318 4152 Box
6437 4151 Box
6555 4149 Box
6674 4147 Box
1867 3837 Box
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
