%!PS-Adobe-2.0 EPSF-2.0
%%Title: proj2/HyperPipes/Plots/soybean.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sat Oct 10 13:33:04 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (proj2/HyperPipes/Plots/soybean.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Adam,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 10 13:33:04 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1658 384 M
0 63 V
0 4233 R
0 -63 V
stroke
1658 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
2559 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2559 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
3461 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3461 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 300)]
] -40.0 MCshow
1.000 UL
LTb
4363 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4363 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 400)]
] -40.0 MCshow
1.000 UL
LTb
5265 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5265 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 500)]
] -40.0 MCshow
1.000 UL
LTb
6166 384 M
0 63 V
0 4233 R
0 -63 V
stroke
6166 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 600)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 700)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (soybean)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6501 1467 M
[ [(Helvetica) 120.0 0.0 true true 0 (Baseline)]
] -40.0 MRshow
LT0
873 4019 Pls
990 4184 Pls
1108 4129 Pls
1225 4267 Pls
1342 4350 Pls
1459 4294 Pls
1577 4302 Pls
1694 4267 Pls
1811 4239 Pls
1928 4250 Pls
2045 4289 Pls
2163 4212 Pls
2280 4121 Pls
2397 4043 Pls
2514 4063 Pls
2632 3998 Pls
2749 3922 Pls
2866 3964 Pls
2983 4002 Pls
3100 3953 Pls
3218 3988 Pls
3335 4004 Pls
3452 3962 Pls
3569 3950 Pls
3687 3979 Pls
3804 4006 Pls
3921 4031 Pls
4038 4054 Pls
4155 4076 Pls
4273 4096 Pls
4390 4115 Pls
4507 4133 Pls
4624 4149 Pls
4742 4155 Pls
4859 4170 Pls
4976 4184 Pls
5093 4198 Pls
5210 4202 Pls
5328 4214 Pls
5445 4226 Pls
5562 4237 Pls
5679 4247 Pls
5797 4257 Pls
5914 4267 Pls
6031 4276 Pls
6148 4285 Pls
6265 4286 Pls
6383 4294 Pls
6500 4302 Pls
6617 4310 Pls
6734 4317 Pls
6852 4299 Pls
6748 1467 Pls
1.000 UP
1.000 UL
LT1
LTb
6501 1347 M
[ [(Helvetica) 120.0 0.0 true true 0 (Naive Bayes)]
] -40.0 MRshow
LT1
873 3358 Crs
990 3854 Crs
1108 3909 Crs
1225 4102 Crs
1342 4217 Crs
1459 4294 Crs
1577 4161 Crs
1694 4226 Crs
1811 4276 Crs
1928 4316 Crs
2045 4169 Crs
2163 4047 Crs
2280 4044 Crs
2397 3972 Crs
2514 3843 Crs
2632 3751 Crs
2749 3708 Crs
2866 3725 Crs
2983 3584 Crs
3100 3540 Crs
3218 3516 Crs
3335 3508 Crs
3452 3531 Crs
3569 3523 Crs
3687 3570 Crs
3804 3612 Crs
3921 3542 Crs
4038 3535 Crs
4155 3540 Crs
4273 3578 Crs
4390 3571 Crs
4507 3554 Crs
4624 3548 Crs
4742 3572 Crs
4859 3604 Crs
4976 3634 Crs
5093 3662 Crs
5210 3689 Crs
5328 3714 Crs
5445 3730 Crs
5562 3753 Crs
5679 3759 Crs
5797 3765 Crs
5914 3779 Crs
6031 3799 Crs
6148 3818 Crs
6265 3836 Crs
6383 3833 Crs
6500 3810 Crs
6617 3775 Crs
6734 3786 Crs
6852 3803 Crs
6748 1347 Crs
1.000 UP
1.000 UL
LT2
LTb
6501 1227 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT2
873 4019 Star
990 4184 Star
1108 4129 Star
1225 4267 Star
1342 4350 Star
1459 4239 Star
1577 4255 Star
1694 4143 Star
1811 4129 Star
1928 4151 Star
2045 4199 Star
2163 4102 Star
2280 4019 Star
2397 3925 Star
2514 3953 Star
2632 3854 Star
2749 3689 Star
2866 3560 Star
2983 3445 Star
3100 3375 Star
3218 3374 Star
3335 3328 Star
3452 3301 Star
3569 3317 Star
3687 3371 Star
3804 3422 Star
3921 3468 Star
4038 3512 Star
4155 3552 Star
4273 3589 Star
4390 3625 Star
4507 3658 Star
4624 3689 Star
4742 3708 Star
4859 3736 Star
4976 3762 Star
5093 3787 Star
5210 3802 Star
5328 3824 Star
5445 3846 Star
5562 3866 Star
5679 3854 Star
5797 3835 Star
5914 3809 Star
6031 3747 Star
6148 3732 Star
6265 3675 Star
6383 3675 Star
6500 3695 Star
6617 3715 Star
6734 3727 Star
6852 3701 Star
6748 1227 Star
1.000 UP
1.000 UL
LT3
LTb
6501 1107 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 0)]
] -40.0 MRshow
LT3
873 4019 Box
990 4184 Box
1108 4129 Box
1225 4267 Box
1342 4350 Box
1459 4294 Box
1577 4302 Box
1694 4267 Box
1811 4239 Box
1928 4250 Box
2045 4289 Box
2163 4212 Box
2280 4121 Box
2397 4043 Box
2514 4063 Box
2632 3998 Box
2749 3922 Box
2866 3964 Box
2983 4002 Box
3100 3953 Box
3218 3988 Box
3335 4004 Box
3452 3962 Box
3569 3950 Box
3687 3979 Box
3804 4006 Box
3921 4031 Box
4038 4054 Box
4155 4076 Box
4273 4096 Box
4390 4115 Box
4507 4133 Box
4624 4149 Box
4742 4155 Box
4859 4170 Box
4976 4184 Box
5093 4198 Box
5210 4202 Box
5328 4214 Box
5445 4226 Box
5562 4237 Box
5679 4247 Box
5797 4257 Box
5914 4267 Box
6031 4276 Box
6148 4285 Box
6265 4286 Box
6383 4294 Box
6500 4302 Box
6617 4310 Box
6734 4317 Box
6852 4299 Box
6748 1107 Box
1.000 UP
1.000 UL
LT4
LTb
6501 987 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 1)]
] -40.0 MRshow
LT4
873 4019 BoxF
990 4184 BoxF
1108 4129 BoxF
1225 4267 BoxF
1342 4350 BoxF
1459 4294 BoxF
1577 4302 BoxF
1694 4267 BoxF
1811 4239 BoxF
1928 4250 BoxF
2045 4289 BoxF
2163 4212 BoxF
2280 4121 BoxF
2397 4043 BoxF
2514 4063 BoxF
2632 3998 BoxF
2749 3922 BoxF
2866 3964 BoxF
2983 4002 BoxF
3100 3953 BoxF
3218 3988 BoxF
3335 4004 BoxF
3452 3962 BoxF
3569 3950 BoxF
3687 3979 BoxF
3804 4006 BoxF
3921 4031 BoxF
4038 4054 BoxF
4155 4076 BoxF
4273 4096 BoxF
4390 4115 BoxF
4507 4133 BoxF
4624 4149 BoxF
4742 4155 BoxF
4859 4170 BoxF
4976 4184 BoxF
5093 4198 BoxF
5210 4202 BoxF
5328 4214 BoxF
5445 4226 BoxF
5562 4237 BoxF
5679 4247 BoxF
5797 4257 BoxF
5914 4267 BoxF
6031 4276 BoxF
6148 4285 BoxF
6265 4286 BoxF
6383 4294 BoxF
6500 4302 BoxF
6617 4310 BoxF
6734 4317 BoxF
6852 4299 BoxF
6748 987 BoxF
1.000 UP
1.000 UL
LT5
LTb
6501 867 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT5
873 4019 Circle
990 4184 Circle
1108 4129 Circle
1225 4267 Circle
1342 4350 Circle
1459 4294 Circle
1577 4302 Circle
1694 4267 Circle
1811 4239 Circle
1928 4250 Circle
2045 4289 Circle
2163 4212 Circle
2280 4121 Circle
2397 4043 Circle
2514 4063 Circle
2632 3998 Circle
2749 3922 Circle
2866 3964 Circle
2983 4002 Circle
3100 3953 Circle
3218 3988 Circle
3335 4004 Circle
3452 3962 Circle
3569 3950 Circle
3687 3979 Circle
3804 4006 Circle
3921 4019 Circle
4038 4043 Circle
4155 4065 Circle
4273 4085 Circle
4390 4104 Circle
4507 4122 Circle
4624 4139 Circle
4742 4116 Circle
4859 4085 Circle
4976 4056 Circle
5093 4046 Circle
5210 3976 Circle
5328 3994 Circle
5445 4011 Circle
5562 4027 Circle
5679 4035 Circle
5797 4011 Circle
5914 3959 Circle
6031 3880 Circle
6148 3818 Circle
6265 3829 Circle
6383 3847 Circle
6500 3864 Circle
6617 3880 Circle
6734 3896 Circle
6852 3860 Circle
6748 867 Circle
1.000 UP
1.000 UL
LT6
LTb
6501 747 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT6
873 4019 CircleF
990 4184 CircleF
1108 4239 CircleF
1225 4350 CircleF
1342 4416 CircleF
1459 4350 CircleF
1577 4350 CircleF
1694 4308 CircleF
1811 4276 CircleF
1928 4316 CircleF
2045 4350 CircleF
2163 4322 CircleF
2280 4273 CircleF
2397 4184 CircleF
2514 4195 CircleF
2632 4205 CircleF
2749 4194 CircleF
2866 4221 CircleF
2983 4245 CircleF
3100 4201 CircleF
3218 4224 CircleF
3335 4244 CircleF
3452 4220 CircleF
3569 4198 CircleF
3687 4217 CircleF
3804 4235 CircleF
3921 4252 CircleF
4038 4267 CircleF
4155 4281 CircleF
4273 4294 CircleF
4390 4307 CircleF
4507 4319 CircleF
4624 4330 CircleF
4742 4340 CircleF
4859 4350 CircleF
4976 4359 CircleF
5093 4367 CircleF
5210 4376 CircleF
5328 4383 CircleF
5445 4391 CircleF
5562 4398 CircleF
5679 4405 CircleF
5797 4411 CircleF
5914 4417 CircleF
6031 4423 CircleF
6148 4429 CircleF
6265 4434 CircleF
6383 4439 CircleF
6500 4444 CircleF
6617 4449 CircleF
6734 4453 CircleF
6852 4432 CircleF
6748 747 CircleF
1.000 UP
1.000 UL
LT7
LTb
6501 627 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT7
873 4019 TriU
990 4184 TriU
1108 4239 TriU
1225 4350 TriU
1342 4416 TriU
1459 4405 TriU
1577 4397 TriU
1694 4391 TriU
1811 4386 TriU
1928 4416 TriU
2045 4440 TriU
2163 4432 TriU
2280 4400 TriU
2397 4373 TriU
2514 4394 TriU
2632 4391 TriU
2749 4388 TriU
2866 4405 TriU
2983 4419 TriU
3100 4399 TriU
3218 4412 TriU
3335 4425 TriU
3452 4407 TriU
3569 4377 TriU
3687 4389 TriU
3804 4400 TriU
3921 4411 TriU
4038 4420 TriU
4155 4429 TriU
4273 4438 TriU
4390 4445 TriU
4507 4453 TriU
4624 4460 TriU
4742 4466 TriU
4859 4472 TriU
4976 4478 TriU
5093 4484 TriU
5210 4489 TriU
5328 4494 TriU
5445 4498 TriU
5562 4503 TriU
5679 4507 TriU
5797 4511 TriU
5914 4515 TriU
6031 4518 TriU
6148 4522 TriU
6265 4525 TriU
6383 4529 TriU
6500 4532 TriU
6617 4535 TriU
6734 4537 TriU
6852 4534 TriU
6748 627 TriU
1.000 UP
1.000 UL
LT8
LTb
6501 507 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT8
873 4019 TriUF
990 4184 TriUF
1108 4239 TriUF
1225 4350 TriUF
1342 4416 TriUF
1459 4405 TriUF
1577 4397 TriUF
1694 4391 TriUF
1811 4386 TriUF
1928 4416 TriUF
2045 4440 TriUF
2163 4432 TriUF
2280 4426 TriUF
2397 4397 TriUF
2514 4416 TriUF
2632 4412 TriUF
2749 4408 TriUF
2866 4423 TriUF
2983 4437 TriUF
3100 4432 TriUF
3218 4444 TriUF
3335 4455 TriUF
3452 4436 TriUF
3569 4418 TriUF
3687 4429 TriUF
3804 4439 TriUF
3921 4447 TriUF
4038 4456 TriUF
4155 4463 TriUF
4273 4471 TriUF
4390 4477 TriUF
4507 4484 TriUF
4624 4490 TriUF
4742 4495 TriUF
4859 4501 TriUF
4976 4506 TriUF
5093 4510 TriUF
5210 4515 TriUF
5328 4519 TriUF
5445 4523 TriUF
5562 4527 TriUF
5679 4531 TriUF
5797 4534 TriUF
5914 4537 TriUF
6031 4540 TriUF
6148 4544 TriUF
6265 4546 TriUF
6383 4549 TriUF
6500 4552 TriUF
6617 4554 TriUF
6734 4557 TriUF
6852 4559 TriUF
6748 507 TriUF
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
