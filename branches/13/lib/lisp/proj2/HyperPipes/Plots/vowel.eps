%!PS-Adobe-2.0 EPSF-2.0
%%Title: proj2/HyperPipes/Plots/vowel.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Mon Oct 12 21:05:19 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (proj2/HyperPipes/Plots/vowel.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Cool Kid Brigade,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Oct 12 21:05:19 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1387 384 M
0 63 V
0 4233 R
0 -63 V
stroke
1387 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
2018 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2018 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
2650 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2650 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 300)]
] -40.0 MCshow
1.000 UL
LTb
3281 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3281 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 400)]
] -40.0 MCshow
1.000 UL
LTb
3912 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3912 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 500)]
] -40.0 MCshow
1.000 UL
LTb
4543 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4543 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 600)]
] -40.0 MCshow
1.000 UL
LTb
5174 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5174 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 700)]
] -40.0 MCshow
1.000 UL
LTb
5806 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5806 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 800)]
] -40.0 MCshow
1.000 UL
LTb
6437 384 M
0 63 V
0 4233 R
0 -63 V
stroke
6437 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 900)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1000)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (vowel)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6501 4557 M
[ [(Helvetica) 120.0 0.0 true true 0 (Baseline)]
] -40.0 MRshow
LT0
876 2193 Crs
996 2984 Crs
1116 3173 Crs
1236 2984 Crs
1356 3097 Crs
1476 3210 Crs
1595 3226 Crs
1715 3097 Crs
1835 3148 Crs
1955 3256 Crs
2075 3262 Crs
2195 3323 Crs
2315 3358 Crs
2435 3420 Crs
2555 3369 Crs
2675 3380 Crs
2795 3390 Crs
2915 3374 Crs
3035 3419 Crs
3155 3459 Crs
3274 3474 Crs
3394 3478 Crs
3514 3500 Crs
3634 3512 Crs
3754 3477 Crs
3874 3454 Crs
3994 3432 Crs
4114 3404 Crs
4234 3409 Crs
4354 3421 Crs
4474 3447 Crs
4594 3458 Crs
4714 3495 Crs
4834 3530 Crs
4953 3537 Crs
5073 3556 Crs
5193 3586 Crs
5313 3591 Crs
5433 3584 Crs
5553 3600 Crs
5673 3627 Crs
5793 3636 Crs
5913 3644 Crs
6033 3657 Crs
6153 3675 Crs
6273 3658 Crs
6393 3670 Crs
6513 3686 Crs
6632 3679 Crs
6752 3681 Crs
6872 3687 Crs
6992 3693 Crs
6748 4557 Crs
1.000 UP
1.000 UL
LT1
1.000 UP
1.000 UL
LT2
LTb
6501 4437 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT2
876 1967 Star
996 2758 Star
1116 3022 Star
1236 2871 Star
1356 2916 Star
1476 2947 Star
1595 3000 Star
1715 2871 Star
1835 2896 Star
1955 2984 Star
2075 3015 Star
2195 3060 Star
2315 3080 Star
2435 3146 Star
2555 3097 Star
2675 3083 Star
2795 3097 Star
2915 3047 Star
3035 3097 Star
3155 3154 Star
3274 3162 Star
3394 3149 Star
3514 3176 Star
3634 3191 Star
3754 3124 Star
3874 3089 Star
3994 3055 Star
4114 3033 Star
4234 3043 Star
4354 3052 Star
4474 3068 Star
4594 3055 Star
4714 3063 Star
4834 3071 Star
4953 3071 Star
5073 3066 Star
5193 3073 Star
5313 3056 Star
5433 3039 Star
5553 3029 Star
5673 3031 Star
5793 3027 Star
5913 3008 Star
6033 3010 Star
6153 2987 Star
6273 2969 Star
6393 2948 Star
6513 2942 Star
6632 2913 Star
6752 2898 Star
6872 2880 Star
6992 2858 Star
6748 4437 Star
1.000 UP
1.000 UL
LT4
LTb
6501 4317 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT4
876 1515 Circle
996 2419 Circle
1116 2645 Circle
1236 2589 Circle
1356 2690 Circle
1476 2796 Circle
1595 2871 Circle
1715 2786 Circle
1835 2746 Circle
1955 2803 Circle
2075 2809 Circle
2195 2852 Circle
2315 2889 Circle
2435 2936 Circle
2555 2901 Circle
2675 2899 Circle
2795 2924 Circle
2915 2896 Circle
3035 2895 Circle
3155 2882 Circle
3274 2914 Circle
3394 2912 Circle
3514 2940 Circle
3634 2947 Circle
3754 2907 Circle
3874 2871 Circle
3994 2838 Circle
4114 2815 Circle
4234 2809 Circle
4354 2826 Circle
4474 2842 Circle
4594 2836 Circle
4714 2844 Circle
4834 2845 Circle
4953 2845 Circle
5073 2833 Circle
5193 2834 Circle
5313 2818 Circle
5433 2802 Circle
5553 2781 Circle
5673 2772 Circle
5793 2763 Circle
5913 2761 Circle
6033 2763 Circle
6153 2761 Circle
6273 2748 Circle
6393 2727 Circle
6513 2706 Circle
6632 2673 Circle
6752 2654 Circle
6872 2636 Circle
6992 2606 Circle
6748 4317 Circle
1.000 UP
1.000 UL
LT3
LTb
6501 4197 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT3
876 2193 Box
996 2984 Box
1116 3173 Box
1236 2984 Box
1356 3142 Box
1476 3323 Box
1595 3453 Box
1715 3408 Box
1835 3524 Box
1955 3640 Box
2075 3714 Box
2195 3776 Box
2315 3828 Box
2435 3889 Box
2555 3821 Box
2675 3846 Box
2795 3882 Box
2915 3914 Box
3035 3954 Box
3155 3979 Box
3274 4012 Box
3394 4033 Box
3514 4051 Box
3634 4068 Box
3754 4065 Box
3874 4080 Box
3994 4085 Box
4114 4091 Box
4234 4103 Box
4354 4115 Box
4474 4133 Box
4594 4150 Box
4714 4166 Box
4834 4181 Box
4953 4195 Box
5073 4209 Box
5193 4222 Box
5313 4228 Box
5433 4239 Box
5553 4250 Box
5673 4261 Box
5793 4265 Box
5913 4275 Box
6033 4279 Box
6153 4283 Box
6273 4282 Box
6393 4286 Box
6513 4289 Box
6632 4292 Box
6752 4300 Box
6872 4308 Box
6992 4315 Box
6748 4197 Box
1.000 UP
1.000 UL
LT8
LTb
6501 4077 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT8
876 2419 Box
996 3210 Box
1116 3625 Box
1236 3493 Box
1356 3685 Box
1476 3851 Box
1595 3969 Box
1715 3917 Box
1835 3977 Box
1955 4047 Box
2075 4104 Box
2195 4152 Box
2315 4193 Box
2435 4228 Box
2555 4198 Box
2675 4228 Box
2795 4254 Box
2915 4278 Box
3035 4299 Box
3155 4318 Box
3274 4335 Box
3394 4351 Box
3514 4365 Box
3634 4379 Box
3754 4372 Box
3874 4384 Box
3994 4395 Box
4114 4405 Box
4234 4407 Box
4354 4416 Box
4474 4425 Box
4594 4433 Box
4714 4440 Box
4834 4447 Box
4953 4454 Box
5073 4460 Box
5193 4466 Box
5313 4472 Box
5433 4477 Box
5553 4482 Box
5673 4487 Box
5793 4492 Box
5913 4496 Box
6033 4500 Box
6153 4504 Box
6273 4508 Box
6393 4512 Box
6513 4515 Box
6632 4518 Box
6752 4522 Box
6872 4525 Box
6992 4528 Box
6748 4077 Box
1.000 UP
1.000 UL
LT4
LTb
6501 3957 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT4
876 2645 Box
996 3323 Box
1116 3776 Box
1236 3832 Box
1356 4002 Box
1476 4115 Box
1595 4195 Box
1715 4256 Box
1835 4303 Box
1955 4341 Box
2075 4372 Box
2195 4397 Box
2315 4419 Box
2435 4438 Box
2555 4454 Box
2675 4468 Box
2795 4480 Box
2915 4492 Box
3035 4501 Box
3155 4510 Box
3274 4518 Box
3394 4526 Box
3514 4533 Box
3634 4539 Box
3754 4544 Box
3874 4550 Box
3994 4554 Box
4114 4559 Box
4234 4563 Box
4354 4567 Box
4474 4571 Box
4594 4574 Box
4714 4577 Box
4834 4580 Box
4953 4583 Box
5073 4586 Box
5193 4588 Box
5313 4591 Box
5433 4593 Box
5553 4595 Box
5673 4597 Box
5793 4599 Box
5913 4601 Box
6033 4603 Box
6153 4605 Box
6273 4606 Box
6393 4608 Box
6513 4609 Box
6632 4611 Box
6752 4612 Box
6872 4613 Box
6992 4615 Box
6748 3957 Box
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
