%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../Plots/vowel.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Fri Oct  9 18:03:56 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../Plots/vowel.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Adam,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Oct  9 18:03:56 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1387 384 M
0 63 V
0 4233 R
0 -63 V
stroke
1387 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
2018 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2018 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
2650 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2650 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 300)]
] -40.0 MCshow
1.000 UL
LTb
3281 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3281 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 400)]
] -40.0 MCshow
1.000 UL
LTb
3912 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3912 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 500)]
] -40.0 MCshow
1.000 UL
LTb
4543 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4543 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 600)]
] -40.0 MCshow
1.000 UL
LTb
5174 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5174 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 700)]
] -40.0 MCshow
1.000 UL
LTb
5806 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5806 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 800)]
] -40.0 MCshow
1.000 UL
LTb
6437 384 M
0 63 V
0 4233 R
0 -63 V
stroke
6437 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 900)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1000)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (vowel)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6501 1347 M
[ [(Helvetica) 120.0 0.0 true true 0 (Baseline)]
] -40.0 MRshow
LT0
876 384 Pls
996 384 Pls
1116 459 Pls
1236 441 Pls
1356 520 Pls
1476 610 Pls
1595 772 Pls
1715 751 Pls
1835 811 Pls
1955 927 Pls
2075 1021 Pls
2195 1138 Pls
2315 1254 Pls
2435 1353 Pls
2555 1349 Pls
2675 1373 Pls
2795 1368 Pls
2915 1376 Pls
3035 1479 Pls
3155 1571 Pls
3274 1633 Pls
3394 1617 Pls
3514 1662 Pls
3634 1675 Pls
3754 1641 Pls
3874 1636 Pls
3994 1657 Pls
4114 1684 Pls
4234 1741 Pls
4354 1793 Pls
4474 1865 Pls
4594 1910 Pls
4714 1994 Pls
4834 2066 Pls
4953 2109 Pls
5073 2143 Pls
5193 2193 Pls
5313 2217 Pls
5433 2228 Pls
5553 2278 Pls
5673 2336 Pls
5793 2370 Pls
5913 2398 Pls
6033 2434 Pls
6153 2469 Pls
6273 2468 Pls
6393 2486 Pls
6513 2518 Pls
6632 2530 Pls
6752 2555 Pls
6872 2583 Pls
6992 2610 Pls
6748 1347 Pls
1.000 UP
1.000 UL
LT1
LTb
6501 1227 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT1
876 1967 Crs
996 2758 Crs
1116 2947 Crs
1236 2815 Crs
1356 2916 Crs
1476 2947 Crs
1595 3000 Crs
1715 2899 Crs
1835 2921 Crs
1955 3029 Crs
2075 3056 Crs
2195 3097 Crs
2315 3132 Crs
2435 3194 Crs
2555 3142 Crs
2675 3140 Crs
2795 3150 Crs
2915 3110 Crs
3035 3133 Crs
3155 3176 Crs
3274 3183 Crs
3394 3159 Crs
3514 3176 Crs
3634 3201 Crs
3754 3142 Crs
3874 3106 Crs
3994 3064 Crs
4114 3041 Crs
4234 3058 Crs
4354 3060 Crs
4474 3075 Crs
4594 3062 Crs
4714 3070 Crs
4834 3077 Crs
4953 3078 Crs
5073 3078 Crs
5193 3091 Crs
5313 3073 Crs
5433 3051 Crs
5553 3046 Crs
5673 3048 Crs
5793 3038 Crs
5913 3034 Crs
6033 3030 Crs
6153 3017 Crs
6273 3004 Crs
6393 2972 Crs
6513 2965 Crs
6632 2940 Crs
6752 2921 Crs
6872 2902 Crs
6992 2880 Crs
6748 1227 Crs
1.000 UP
1.000 UL
LT2
LTb
6501 1107 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 0)]
] -40.0 MRshow
LT2
876 1741 Star
996 2532 Star
1116 2796 Star
1236 2645 Star
1356 2600 Star
1476 2645 Star
1595 2742 Star
1715 2702 Star
1835 2645 Star
1955 2781 Star
2075 2830 Star
2195 2909 Star
2315 2923 Star
2435 3000 Star
2555 2931 Star
2675 2956 Star
2795 2964 Star
2915 2947 Star
3035 2990 Star
3155 3029 Star
3274 3054 Star
3394 3036 Star
3514 3048 Star
3634 3060 Star
3754 3007 Star
3874 2958 Star
3994 2905 Star
4114 2879 Star
4234 2863 Star
4354 2826 Star
4474 2806 Star
4594 2808 Star
4714 2823 Star
4834 2845 Star
4953 2852 Star
5073 2859 Star
5193 2859 Star
5313 2853 Star
5433 2854 Star
5553 2849 Star
5673 2855 Star
5793 2855 Star
5913 2871 Star
6033 2881 Star
6153 2891 Star
6273 2871 Star
6393 2857 Star
6513 2829 Star
6632 2811 Star
6752 2817 Star
6872 2822 Star
6992 2819 Star
6748 1107 Star
1.000 UP
1.000 UL
LT3
LTb
6501 987 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 1)]
] -40.0 MRshow
LT3
876 1741 Box
996 2306 Box
1116 2645 Box
1236 2419 Box
1356 2329 Box
1476 2419 Box
1595 2516 Box
1715 2475 Box
1835 2494 Box
1955 2622 Box
2075 2624 Box
2195 2758 Box
2315 2784 Box
2435 2807 Box
2555 2751 Box
2675 2744 Box
2795 2751 Box
2915 2746 Box
3035 2788 Box
3155 2792 Box
3274 2785 Box
3394 2779 Box
3514 2783 Box
3634 2786 Box
3754 2735 Box
3874 2680 Box
3994 2612 Box
4114 2564 Box
4234 2551 Box
4354 2524 Box
4474 2506 Box
4594 2511 Box
4714 2535 Box
4834 2565 Box
4953 2574 Box
5073 2582 Box
5193 2590 Box
5313 2591 Box
5433 2599 Box
5553 2600 Box
5673 2606 Box
5793 2618 Box
5913 2635 Box
6033 2645 Box
6153 2650 Box
6273 2640 Box
6393 2631 Box
6513 2598 Box
6632 2585 Box
6752 2595 Box
6872 2605 Box
6992 2619 Box
6748 987 Box
1.000 UP
1.000 UL
LT4
LTb
6501 867 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT4
876 1515 BoxF
996 2419 BoxF
1116 2645 BoxF
1236 2589 BoxF
1356 2690 BoxF
1476 2796 BoxF
1595 2871 BoxF
1715 2786 BoxF
1835 2746 BoxF
1955 2803 BoxF
2075 2809 BoxF
2195 2852 BoxF
2315 2889 BoxF
2435 2936 BoxF
2555 2901 BoxF
2675 2899 BoxF
2795 2924 BoxF
2915 2896 BoxF
3035 2895 BoxF
3155 2882 BoxF
3274 2914 BoxF
3394 2912 BoxF
3514 2940 BoxF
3634 2947 BoxF
3754 2907 BoxF
3874 2871 BoxF
3994 2838 BoxF
4114 2815 BoxF
4234 2809 BoxF
4354 2826 BoxF
4474 2842 BoxF
4594 2836 BoxF
4714 2844 BoxF
4834 2845 BoxF
4953 2845 BoxF
5073 2833 BoxF
5193 2834 BoxF
5313 2818 BoxF
5433 2802 BoxF
5553 2781 BoxF
5673 2772 BoxF
5793 2763 BoxF
5913 2761 BoxF
6033 2763 BoxF
6153 2761 BoxF
6273 2748 BoxF
6393 2727 BoxF
6513 2706 BoxF
6632 2673 BoxF
6752 2654 BoxF
6872 2636 BoxF
6992 2606 BoxF
6748 867 BoxF
1.000 UP
1.000 UL
LT5
LTb
6501 747 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT5
876 2193 Circle
996 2984 Circle
1116 3173 Circle
1236 2984 Circle
1356 3142 Circle
1476 3323 Circle
1595 3453 Circle
1715 3408 Circle
1835 3524 Circle
1955 3640 Circle
2075 3714 Circle
2195 3776 Circle
2315 3828 Circle
2435 3889 Circle
2555 3821 Circle
2675 3846 Circle
2795 3882 Circle
2915 3914 Circle
3035 3954 Circle
3155 3979 Circle
3274 4012 Circle
3394 4033 Circle
3514 4051 Circle
3634 4068 Circle
3754 4065 Circle
3874 4080 Circle
3994 4085 Circle
4114 4091 Circle
4234 4103 Circle
4354 4115 Circle
4474 4133 Circle
4594 4150 Circle
4714 4166 Circle
4834 4181 Circle
4953 4195 Circle
5073 4209 Circle
5193 4222 Circle
5313 4228 Circle
5433 4239 Circle
5553 4250 Circle
5673 4261 Circle
5793 4265 Circle
5913 4275 Circle
6033 4279 Circle
6153 4283 Circle
6273 4282 Circle
6393 4286 Circle
6513 4289 Circle
6632 4292 Circle
6752 4300 Circle
6872 4308 Circle
6992 4315 Circle
6748 747 Circle
1.000 UP
1.000 UL
LT6
LTb
6501 627 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT6
876 2419 CircleF
996 3210 CircleF
1116 3625 CircleF
1236 3493 CircleF
1356 3685 CircleF
1476 3851 CircleF
1595 3969 CircleF
1715 3917 CircleF
1835 3977 CircleF
1955 4047 CircleF
2075 4104 CircleF
2195 4152 CircleF
2315 4193 CircleF
2435 4228 CircleF
2555 4198 CircleF
2675 4228 CircleF
2795 4254 CircleF
2915 4278 CircleF
3035 4299 CircleF
3155 4318 CircleF
3274 4335 CircleF
3394 4351 CircleF
3514 4365 CircleF
3634 4379 CircleF
3754 4372 CircleF
3874 4384 CircleF
3994 4395 CircleF
4114 4405 CircleF
4234 4407 CircleF
4354 4416 CircleF
4474 4425 CircleF
4594 4433 CircleF
4714 4440 CircleF
4834 4447 CircleF
4953 4454 CircleF
5073 4460 CircleF
5193 4466 CircleF
5313 4472 CircleF
5433 4477 CircleF
5553 4482 CircleF
5673 4487 CircleF
5793 4492 CircleF
5913 4496 CircleF
6033 4500 CircleF
6153 4504 CircleF
6273 4508 CircleF
6393 4512 CircleF
6513 4515 CircleF
6632 4518 CircleF
6752 4522 CircleF
6872 4525 CircleF
6992 4528 CircleF
6748 627 CircleF
1.000 UP
1.000 UL
LT7
LTb
6501 507 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT7
876 2645 TriU
996 3323 TriU
1116 3776 TriU
1236 3832 TriU
1356 4002 TriU
1476 4115 TriU
1595 4195 TriU
1715 4256 TriU
1835 4303 TriU
1955 4341 TriU
2075 4372 TriU
2195 4397 TriU
2315 4419 TriU
2435 4438 TriU
2555 4454 TriU
2675 4468 TriU
2795 4480 TriU
2915 4492 TriU
3035 4501 TriU
3155 4510 TriU
3274 4518 TriU
3394 4526 TriU
3514 4533 TriU
3634 4539 TriU
3754 4544 TriU
3874 4550 TriU
3994 4554 TriU
4114 4559 TriU
4234 4563 TriU
4354 4567 TriU
4474 4571 TriU
4594 4574 TriU
4714 4577 TriU
4834 4580 TriU
4953 4583 TriU
5073 4586 TriU
5193 4588 TriU
5313 4591 TriU
5433 4593 TriU
5553 4595 TriU
5673 4597 TriU
5793 4599 TriU
5913 4601 TriU
6033 4603 TriU
6153 4605 TriU
6273 4606 TriU
6393 4608 TriU
6513 4609 TriU
6632 4611 TriU
6752 4612 TriU
6872 4613 TriU
6992 4615 TriU
6748 507 TriU
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
