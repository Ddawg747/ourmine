%!PS-Adobe-2.0 EPSF-2.0
%%Title: proj2/HyperPipes/Plots/sonar.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sat Oct 10 05:59:44 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (proj2/HyperPipes/Plots/sonar.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Adam,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 10 05:59:44 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
2018 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2018 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 50)]
] -40.0 MCshow
1.000 UL
LTb
3281 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3281 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
4543 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4543 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 150)]
] -40.0 MCshow
1.000 UL
LTb
5806 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5806 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 250)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (sonar)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6501 1467 M
[ [(Helvetica) 120.0 0.0 true true 0 (Baseline)]
] -40.0 MRshow
LT0
857 3606 Pls
958 4143 Pls
1059 4322 Pls
1160 4412 Pls
1261 4465 Pls
1362 4501 Pls
1463 4527 Pls
1564 4546 Pls
1665 4561 Pls
1766 4573 Pls
1867 4582 Pls
1968 4591 Pls
2069 4597 Pls
2170 4603 Pls
2271 4608 Pls
2372 4613 Pls
2473 4617 Pls
2574 4620 Pls
2675 4623 Pls
2776 4626 Pls
2877 4629 Pls
2978 4631 Pls
3079 4633 Pls
3180 4635 Pls
3281 4508 Pls
3382 4350 Pls
3483 4203 Pls
3584 4066 Pls
3685 4013 Pls
3786 3892 Pls
3887 3779 Pls
3988 3673 Pls
4089 3573 Pls
4190 3511 Pls
4291 3422 Pls
4392 3338 Pls
4493 3345 Pls
4594 3295 Pls
4695 3248 Pls
4796 3203 Pls
4897 3161 Pls
4998 3095 Pls
5099 3032 Pls
5200 3045 Pls
5301 3009 Pls
5402 3046 Pls
5503 3058 Pls
5604 3069 Pls
5705 3102 Pls
5806 3090 Pls
5907 3101 Pls
6008 3090 Pls
6748 1467 Pls
1.000 UP
1.000 UL
LT1
LTb
6501 1347 M
[ [(Helvetica) 120.0 0.0 true true 0 (Naive Bayes)]
] -40.0 MRshow
LT1
857 4680 Crs
958 4680 Crs
1059 4680 Crs
1160 4680 Crs
1261 4680 Crs
1362 4680 Crs
1463 4680 Crs
1564 4680 Crs
1665 4680 Crs
1766 4680 Crs
1867 4680 Crs
1968 4680 Crs
2069 4680 Crs
2170 4680 Crs
2271 4680 Crs
2372 4680 Crs
2473 4680 Crs
2574 4680 Crs
2675 4680 Crs
2776 4680 Crs
2877 4680 Crs
2978 4680 Crs
3079 4680 Crs
3180 4680 Crs
3281 4680 Crs
3382 4680 Crs
3483 4680 Crs
3584 4603 Crs
3685 4458 Crs
3786 4322 Crs
3887 4195 Crs
3988 4076 Crs
4089 3964 Crs
4190 3859 Crs
4291 3759 Crs
4392 3666 Crs
4493 3577 Crs
4594 3521 Crs
4695 3468 Crs
4796 3391 Crs
4897 3318 Crs
4998 3248 Crs
5099 3206 Crs
5200 3191 Crs
5301 3129 Crs
5402 3069 Crs
5503 3058 Crs
5604 3024 Crs
5705 2992 Crs
5806 2940 Crs
5907 2911 Crs
6748 1347 Crs
1.000 UP
1.000 UL
LT2
LTb
6501 1227 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT2
857 3606 Star
958 4143 Star
1059 4322 Star
1160 4412 Star
1261 4465 Star
1362 4501 Star
1463 4527 Star
1564 4546 Star
1665 4561 Star
1766 4573 Star
1867 4582 Star
1968 4591 Star
2069 4597 Star
2170 4603 Star
2271 4608 Star
2372 4613 Star
2473 4617 Star
2574 4620 Star
2675 4623 Star
2776 4626 Star
2877 4629 Star
2978 4631 Star
3079 4633 Star
3180 4635 Star
3281 4508 Star
3382 4350 Star
3483 4203 Star
3584 4066 Star
3685 4013 Star
3786 3892 Star
3887 3779 Star
3988 3673 Star
4089 3573 Star
4190 3511 Star
4291 3422 Star
4392 3338 Star
4493 3345 Star
4594 3295 Star
4695 3248 Star
4796 3203 Star
4897 3161 Star
4998 3095 Star
5099 3032 Star
5200 3045 Star
5301 3009 Star
5402 3046 Star
5503 3058 Star
5604 3002 Star
5705 2970 Star
5806 2940 Star
5907 2911 Star
6008 2862 Star
6748 1227 Star
1.000 UP
1.000 UL
LT3
LTb
6501 1107 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 0)]
] -40.0 MRshow
LT3
857 3606 Box
958 4143 Box
1059 4322 Box
1160 4412 Box
1261 4465 Box
1362 4501 Box
1463 4527 Box
1564 4546 Box
1665 4561 Box
1766 4573 Box
1867 4582 Box
1968 4591 Box
2069 4597 Box
2170 4603 Box
2271 4608 Box
2372 4613 Box
2473 4617 Box
2574 4620 Box
2675 4623 Box
2776 4626 Box
2877 4629 Box
2978 4631 Box
3079 4633 Box
3180 4635 Box
3281 4508 Box
3382 4350 Box
3483 4203 Box
3584 4066 Box
3685 4013 Box
3786 3892 Box
3887 3779 Box
3988 3673 Box
4089 3671 Box
4190 3574 Box
4291 3483 Box
4392 3397 Box
4493 3403 Box
4594 3352 Box
4695 3276 Box
4796 3203 Box
4897 3134 Box
4998 3069 Box
5099 3032 Box
5200 2996 Box
5301 2962 Box
5402 2999 Box
5503 3012 Box
5604 2957 Box
5705 2927 Box
5806 2940 Box
5907 2974 Box
6008 2966 Box
6748 1107 Box
1.000 UP
1.000 UL
LT4
LTb
6501 987 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 1)]
] -40.0 MRshow
LT4
857 3606 BoxF
958 4143 BoxF
1059 4322 BoxF
1160 4412 BoxF
1261 4465 BoxF
1362 4501 BoxF
1463 4527 BoxF
1564 4546 BoxF
1665 4561 BoxF
1766 4573 BoxF
1867 4582 BoxF
1968 4591 BoxF
2069 4597 BoxF
2170 4603 BoxF
2271 4608 BoxF
2372 4613 BoxF
2473 4617 BoxF
2574 4620 BoxF
2675 4623 BoxF
2776 4626 BoxF
2877 4629 BoxF
2978 4631 BoxF
3079 4633 BoxF
3180 4635 BoxF
3281 4508 BoxF
3382 4350 BoxF
3483 4203 BoxF
3584 4066 BoxF
3685 3976 BoxF
3786 3857 BoxF
3887 3745 BoxF
3988 3640 BoxF
4089 3639 BoxF
4190 3543 BoxF
4291 3453 BoxF
4392 3397 BoxF
4493 3345 BoxF
4594 3295 BoxF
4695 3248 BoxF
4796 3176 BoxF
4897 3108 BoxF
4998 3069 BoxF
5099 3032 BoxF
5200 2996 BoxF
5301 2962 BoxF
5402 2999 BoxF
5503 3012 BoxF
5604 2957 BoxF
5705 2927 BoxF
5806 2962 BoxF
5907 2995 BoxF
6008 3007 BoxF
6748 987 BoxF
1.000 UP
1.000 UL
LT5
LTb
6501 867 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT5
857 3606 Circle
958 4143 Circle
1059 4322 Circle
1160 4412 Circle
1261 4465 Circle
1362 4501 Circle
1463 4527 Circle
1564 4546 Circle
1665 4561 Circle
1766 4573 Circle
1867 4582 Circle
1968 4591 Circle
2069 4597 Circle
2170 4603 Circle
2271 4608 Circle
2372 4613 Circle
2473 4617 Circle
2574 4620 Circle
2675 4623 Circle
2776 4626 Circle
2877 4629 Circle
2978 4631 Circle
3079 4633 Circle
3180 4635 Circle
3281 4508 Circle
3382 4350 Circle
3483 4203 Circle
3584 4066 Circle
3685 4013 Circle
3786 3892 Circle
3887 3779 Circle
3988 3673 Circle
4089 3573 Circle
4190 3511 Circle
4291 3422 Circle
4392 3338 Circle
4493 3345 Circle
4594 3295 Circle
4695 3248 Circle
4796 3203 Circle
4897 3161 Circle
4998 3095 Circle
5099 3032 Circle
5200 3045 Circle
5301 3009 Circle
5402 3046 Circle
5503 3058 Circle
5604 3069 Circle
5705 3102 Circle
5806 3090 Circle
5907 3101 Circle
6008 3090 Circle
6748 867 Circle
1.000 UP
1.000 UL
LT6
LTb
6501 747 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT6
857 3606 CircleF
958 4143 CircleF
1059 4322 CircleF
1160 4412 CircleF
1261 4465 CircleF
1362 4501 CircleF
1463 4527 CircleF
1564 4546 CircleF
1665 4561 CircleF
1766 4573 CircleF
1867 4582 CircleF
1968 4591 CircleF
2069 4597 CircleF
2170 4603 CircleF
2271 4608 CircleF
2372 4613 CircleF
2473 4617 CircleF
2574 4620 CircleF
2675 4623 CircleF
2776 4626 CircleF
2877 4629 CircleF
2978 4631 CircleF
3079 4633 CircleF
3180 4635 CircleF
3281 4508 CircleF
3382 4350 CircleF
3483 4242 CircleF
3584 4181 CircleF
3685 4199 CircleF
3786 4179 CircleF
3887 4195 CircleF
3988 4177 CircleF
4089 4127 CircleF
4190 4080 CircleF
4291 4097 CircleF
4392 4083 CircleF
4493 4099 CircleF
4594 4115 CircleF
4695 4129 CircleF
4796 4143 CircleF
4897 4156 CircleF
4998 4169 CircleF
5099 4180 CircleF
5200 4192 CircleF
5301 4203 CircleF
5402 4213 CircleF
5503 4223 CircleF
5604 4232 CircleF
5705 4242 CircleF
5806 4250 CircleF
5907 4259 CircleF
6008 4267 CircleF
6748 747 CircleF
1.000 UP
1.000 UL
LT7
LTb
6501 627 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT7
857 3606 TriU
958 4143 TriU
1059 4322 TriU
1160 4412 TriU
1261 4465 TriU
1362 4501 TriU
1463 4527 TriU
1564 4546 TriU
1665 4561 TriU
1766 4573 TriU
1867 4582 TriU
1968 4591 TriU
2069 4597 TriU
2170 4603 TriU
2271 4608 TriU
2372 4613 TriU
2473 4617 TriU
2574 4620 TriU
2675 4623 TriU
2776 4626 TriU
2877 4629 TriU
2978 4631 TriU
3079 4633 TriU
3180 4635 TriU
3281 4508 TriU
3382 4350 TriU
3483 4362 TriU
3584 4335 TriU
3685 4347 TriU
3786 4358 TriU
3887 4368 TriU
3988 4378 TriU
4089 4355 TriU
4190 4364 TriU
4291 4373 TriU
4392 4382 TriU
4493 4390 TriU
4594 4397 TriU
4695 4405 TriU
4796 4412 TriU
4897 4418 TriU
4998 4424 TriU
5099 4430 TriU
5200 4436 TriU
5301 4441 TriU
5402 4447 TriU
5503 4451 TriU
5604 4456 TriU
5705 4461 TriU
5806 4465 TriU
5907 4469 TriU
6008 4473 TriU
6748 627 TriU
1.000 UP
1.000 UL
LT8
LTb
6501 507 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT8
857 3606 TriUF
958 4143 TriUF
1059 4322 TriUF
1160 4412 TriUF
1261 4465 TriUF
1362 4501 TriUF
1463 4527 TriUF
1564 4546 TriUF
1665 4561 TriUF
1766 4573 TriUF
1867 4582 TriUF
1968 4591 TriUF
2069 4597 TriUF
2170 4603 TriUF
2271 4608 TriUF
2372 4613 TriUF
2473 4617 TriUF
2574 4620 TriUF
2675 4623 TriUF
2776 4626 TriUF
2877 4629 TriUF
2978 4631 TriUF
3079 4633 TriUF
3180 4635 TriUF
3281 4508 TriUF
3382 4473 TriUF
3483 4481 TriUF
3584 4488 TriUF
3685 4495 TriUF
3786 4501 TriUF
3887 4507 TriUF
3988 4512 TriUF
4089 4517 TriUF
4190 4522 TriUF
4291 4527 TriUF
4392 4531 TriUF
4493 4535 TriUF
4594 4539 TriUF
4695 4542 TriUF
4796 4546 TriUF
4897 4549 TriUF
4998 4552 TriUF
5099 4555 TriUF
5200 4558 TriUF
5301 4561 TriUF
5402 4563 TriUF
5503 4566 TriUF
5604 4568 TriUF
5705 4570 TriUF
5806 4573 TriUF
5907 4575 TriUF
6008 4577 TriUF
6748 507 TriUF
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
