%!PS-Adobe-2.0 EPSF-2.0
%%Title: proj2/HyperPipes/Plots/letter.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sat Oct 10 13:59:56 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (proj2/HyperPipes/Plots/letter.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Adam,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 10 13:59:56 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1387 384 M
0 63 V
0 4233 R
0 -63 V
stroke
1387 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2000)]
] -40.0 MCshow
1.000 UL
LTb
2018 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2018 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 4000)]
] -40.0 MCshow
1.000 UL
LTb
2650 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2650 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 6000)]
] -40.0 MCshow
1.000 UL
LTb
3281 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3281 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 8000)]
] -40.0 MCshow
1.000 UL
LTb
3912 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3912 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 10000)]
] -40.0 MCshow
1.000 UL
LTb
4543 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4543 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 12000)]
] -40.0 MCshow
1.000 UL
LTb
5174 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5174 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 14000)]
] -40.0 MCshow
1.000 UL
LTb
5806 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5806 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 16000)]
] -40.0 MCshow
1.000 UL
LTb
6437 384 M
0 63 V
0 4233 R
0 -63 V
stroke
6437 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 18000)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 20000)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (letter)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6501 1467 M
[ [(Helvetica) 120.0 0.0 true true 0 (Baseline)]
] -40.0 MRshow
LT0
882 2221 Pls
1008 2903 Pls
1135 3219 Pls
1261 3410 Pls
1387 3576 Pls
1513 3713 Pls
1640 3815 Pls
1766 3883 Pls
1892 3953 Pls
2018 4004 Pls
2145 4048 Pls
2271 4090 Pls
2397 4119 Pls
2523 4150 Pls
2650 4176 Pls
2776 4204 Pls
2902 4226 Pls
3028 4244 Pls
3155 4262 Pls
3281 4276 Pls
3407 4293 Pls
3533 4307 Pls
3660 4319 Pls
3786 4333 Pls
3912 4344 Pls
4038 4354 Pls
4164 4363 Pls
4291 4373 Pls
4417 4382 Pls
4543 4390 Pls
4669 4396 Pls
4796 4404 Pls
4922 4411 Pls
5048 4418 Pls
5174 4424 Pls
5301 4430 Pls
5427 4436 Pls
5553 4441 Pls
5679 4446 Pls
5806 4452 Pls
5932 4456 Pls
6058 4461 Pls
6184 4465 Pls
6311 4470 Pls
6437 4473 Pls
6563 4477 Pls
6689 4480 Pls
6816 4482 Pls
6942 4486 Pls
7068 4490 Pls
6748 1467 Pls
1.000 UP
1.000 UL
LT1
LTb
6501 1347 M
[ [(Helvetica) 120.0 0.0 true true 0 (Naive Bayes)]
] -40.0 MRshow
LT1
882 1902 Crs
1008 2268 Crs
1134 2541 Crs
1260 2702 Crs
1386 2822 Crs
1512 2903 Crs
1637 2957 Crs
1763 2998 Crs
1889 3035 Crs
2015 3090 Crs
2141 3132 Crs
2267 3177 Crs
2393 3190 Crs
2519 3218 Crs
2645 3244 Crs
2771 3263 Crs
2897 3282 Crs
3023 3295 Crs
3149 3313 Crs
3274 3324 Crs
3400 3332 Crs
3526 3346 Crs
3652 3363 Crs
3778 3369 Crs
3904 3374 Crs
4030 3387 Crs
4156 3391 Crs
4282 3397 Crs
4408 3399 Crs
4534 3401 Crs
4660 3400 Crs
4786 3404 Crs
4912 3409 Crs
5037 3412 Crs
5163 3418 Crs
5289 3422 Crs
5415 3427 Crs
5541 3431 Crs
5667 3430 Crs
5793 3435 Crs
5919 3441 Crs
6045 3446 Crs
6171 3449 Crs
6297 3450 Crs
6423 3453 Crs
6549 3457 Crs
6674 3458 Crs
6800 3458 Crs
6926 3462 Crs
7052 3466 Crs
6748 1347 Crs
1.000 UP
1.000 UL
LT2
LTb
6501 1227 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT2
882 1791 Star
1008 2097 Star
1135 2110 Star
1261 2100 Star
1387 2055 Star
1513 2015 Star
1640 1993 Star
1766 1967 Star
1892 1951 Star
2018 1931 Star
2145 1905 Star
2271 1894 Star
2397 1879 Star
2523 1860 Star
2650 1835 Star
2776 1818 Star
2902 1814 Star
3028 1805 Star
3155 1801 Star
3281 1795 Star
3407 1785 Star
3533 1773 Star
3660 1763 Star
3786 1749 Star
3912 1740 Star
4038 1729 Star
4164 1717 Star
4291 1713 Star
4417 1705 Star
4543 1695 Star
4669 1689 Star
4796 1688 Star
4922 1677 Star
5048 1672 Star
5174 1667 Star
5301 1656 Star
5427 1648 Star
5553 1645 Star
5679 1639 Star
5806 1635 Star
5932 1630 Star
6058 1625 Star
6184 1619 Star
6311 1614 Star
6437 1607 Star
6563 1598 Star
6689 1592 Star
6816 1586 Star
6942 1581 Star
7068 1578 Star
6748 1227 Star
1.000 UP
1.000 UL
LT3
LTb
6501 1107 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 0)]
] -40.0 MRshow
LT3
882 1630 Box
1008 2151 Box
1135 2274 Box
1261 2384 Box
1387 2416 Box
1513 2443 Box
1640 2480 Box
1766 2517 Box
1892 2540 Box
2018 2576 Box
2145 2592 Box
2271 2612 Box
2397 2620 Box
2523 2636 Box
2650 2654 Box
2776 2673 Box
2902 2678 Box
3028 2687 Box
3155 2694 Box
3281 2694 Box
3407 2704 Box
3533 2708 Box
3660 2712 Box
3786 2713 Box
3912 2723 Box
4038 2728 Box
4164 2730 Box
4291 2741 Box
4417 2745 Box
4543 2749 Box
4669 2752 Box
4796 2756 Box
4922 2761 Box
5048 2762 Box
5174 2766 Box
5301 2769 Box
5427 2771 Box
5553 2769 Box
5679 2773 Box
5806 2777 Box
5932 2780 Box
6058 2782 Box
6184 2783 Box
6311 2777 Box
6437 2777 Box
6563 2780 Box
6689 2779 Box
6816 2774 Box
6942 2773 Box
7068 2771 Box
6748 1107 Box
1.000 UP
1.000 UL
LT4
LTb
6501 987 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 1)]
] -40.0 MRshow
LT4
882 1490 BoxF
1008 1898 BoxF
1135 2013 BoxF
1261 2108 BoxF
1387 2169 BoxF
1513 2194 BoxF
1640 2227 BoxF
1766 2242 BoxF
1892 2262 BoxF
2018 2295 BoxF
2145 2318 BoxF
2271 2340 BoxF
2397 2349 BoxF
2523 2366 BoxF
2650 2380 BoxF
2776 2403 BoxF
2902 2416 BoxF
3028 2429 BoxF
3155 2437 BoxF
3281 2443 BoxF
3407 2457 BoxF
3533 2463 BoxF
3660 2471 BoxF
3786 2474 BoxF
3912 2486 BoxF
4038 2497 BoxF
4164 2503 BoxF
4291 2514 BoxF
4417 2520 BoxF
4543 2525 BoxF
4669 2524 BoxF
4796 2528 BoxF
4922 2533 BoxF
5048 2535 BoxF
5174 2540 BoxF
5301 2547 BoxF
5427 2550 BoxF
5553 2549 BoxF
5679 2554 BoxF
5806 2559 BoxF
5932 2563 BoxF
6058 2566 BoxF
6184 2565 BoxF
6311 2561 BoxF
6437 2563 BoxF
6563 2566 BoxF
6689 2567 BoxF
6816 2563 BoxF
6942 2563 BoxF
7068 2562 BoxF
6748 987 BoxF
1.000 UP
1.000 UL
LT5
LTb
6501 867 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT5
882 1727 Circle
1008 1861 Circle
1135 1873 Circle
1261 1826 Circle
1387 1776 Circle
1513 1739 Circle
1640 1687 Circle
1766 1666 Circle
1892 1644 Circle
2018 1619 Circle
2145 1602 Circle
2271 1582 Circle
2397 1573 Circle
2523 1571 Circle
2650 1556 Circle
2776 1547 Circle
2902 1538 Circle
3028 1526 Circle
3155 1516 Circle
3281 1510 Circle
3407 1506 Circle
3533 1499 Circle
3660 1495 Circle
3786 1492 Circle
3912 1491 Circle
4038 1483 Circle
4164 1475 Circle
4291 1471 Circle
4417 1469 Circle
4543 1467 Circle
4669 1461 Circle
4796 1460 Circle
4922 1456 Circle
5048 1452 Circle
5174 1448 Circle
5301 1444 Circle
5427 1440 Circle
5553 1437 Circle
5679 1436 Circle
5806 1432 Circle
5932 1427 Circle
6058 1423 Circle
6184 1418 Circle
6311 1414 Circle
6437 1411 Circle
6563 1407 Circle
6689 1403 Circle
6816 1397 Circle
6942 1395 Circle
7068 1392 Circle
6748 867 Circle
1.000 UP
1.000 UL
LT6
LTb
6501 747 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT6
882 2897 CircleF
1008 3542 CircleF
1135 3839 CircleF
1261 3985 CircleF
1387 4104 CircleF
1513 4186 CircleF
1640 4249 CircleF
1766 4293 CircleF
1892 4333 CircleF
2018 4361 CircleF
2145 4388 CircleF
2271 4410 CircleF
2397 4430 CircleF
2523 4447 CircleF
2650 4462 CircleF
2776 4475 CircleF
2902 4487 CircleF
3028 4497 CircleF
3155 4506 CircleF
3281 4514 CircleF
3407 4521 CircleF
3533 4528 CircleF
3660 4534 CircleF
3786 4540 CircleF
3912 4546 CircleF
4038 4551 CircleF
4164 4555 CircleF
4291 4560 CircleF
4417 4564 CircleF
4543 4568 CircleF
4669 4571 CircleF
4796 4574 CircleF
4922 4577 CircleF
5048 4580 CircleF
5174 4583 CircleF
5301 4586 CircleF
5427 4588 CircleF
5553 4591 CircleF
5679 4593 CircleF
5806 4595 CircleF
5932 4597 CircleF
6058 4599 CircleF
6184 4601 CircleF
6311 4603 CircleF
6437 4604 CircleF
6563 4606 CircleF
6689 4607 CircleF
6816 4609 CircleF
6942 4610 CircleF
7068 4612 CircleF
6748 747 CircleF
1.000 UP
1.000 UL
LT7
LTb
6501 627 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT7
882 3531 TriU
1008 4057 TriU
1135 4258 TriU
1261 4358 TriU
1387 4422 TriU
1513 4465 TriU
1640 4496 TriU
1766 4519 TriU
1892 4537 TriU
2018 4551 TriU
2145 4563 TriU
2271 4573 TriU
2397 4581 TriU
2523 4588 TriU
2650 4594 TriU
2776 4599 TriU
2902 4604 TriU
3028 4608 TriU
3155 4612 TriU
3281 4616 TriU
3407 4619 TriU
3533 4621 TriU
3660 4624 TriU
3786 4626 TriU
3912 4628 TriU
4038 4630 TriU
4164 4632 TriU
4291 4634 TriU
4417 4636 TriU
4543 4637 TriU
4669 4638 TriU
4796 4640 TriU
4922 4641 TriU
5048 4642 TriU
5174 4643 TriU
5301 4644 TriU
5427 4645 TriU
5553 4646 TriU
5679 4647 TriU
5806 4648 TriU
5932 4649 TriU
6058 4649 TriU
6184 4650 TriU
6311 4651 TriU
6437 4651 TriU
6563 4652 TriU
6689 4653 TriU
6816 4653 TriU
6942 4654 TriU
7068 4654 TriU
6748 627 TriU
1.000 UP
1.000 UL
LT8
LTb
6501 507 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT8
882 4046 TriUF
1008 4363 TriUF
1135 4469 TriUF
1261 4522 TriUF
1387 4553 TriUF
1513 4574 TriUF
1640 4589 TriUF
1766 4601 TriUF
1892 4610 TriUF
2018 4617 TriUF
2145 4622 TriUF
2271 4627 TriUF
2397 4631 TriUF
2523 4635 TriUF
2650 4638 TriUF
2776 4640 TriUF
2902 4643 TriUF
3028 4645 TriUF
3155 4647 TriUF
3281 4648 TriUF
3407 4650 TriUF
3533 4651 TriUF
3660 4652 TriUF
3786 4654 TriUF
3912 4655 TriUF
4038 4656 TriUF
4164 4657 TriUF
4291 4657 TriUF
4417 4658 TriUF
4543 4659 TriUF
4669 4660 TriUF
4796 4660 TriUF
4922 4661 TriUF
5048 4661 TriUF
5174 4662 TriUF
5301 4662 TriUF
5427 4663 TriUF
5553 4663 TriUF
5679 4664 TriUF
5806 4664 TriUF
5932 4665 TriUF
6058 4665 TriUF
6184 4665 TriUF
6311 4666 TriUF
6437 4666 TriUF
6563 4666 TriUF
6689 4667 TriUF
6816 4667 TriUF
6942 4667 TriUF
7068 4667 TriUF
6748 507 TriUF
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
