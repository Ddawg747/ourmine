%!PS-Adobe-2.0 EPSF-2.0
%%Title: proj2/HyperPipes/Plots/hypothyroid.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sat Oct 10 05:52:11 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (proj2/HyperPipes/Plots/hypothyroid.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Adam,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 10 05:52:11 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 384 M
63 0 V
6249 0 R
-63 0 V
stroke
684 384 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
756 1243 M
63 0 V
6249 0 R
-63 0 V
stroke
684 1243 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
756 2102 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2102 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
756 2962 M
63 0 V
6249 0 R
-63 0 V
stroke
684 2962 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
756 3821 M
63 0 V
6249 0 R
-63 0 V
stroke
684 3821 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
756 4680 M
63 0 V
6249 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 384 M
0 63 V
0 4233 R
0 -63 V
stroke
756 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1545 384 M
0 63 V
0 4233 R
0 -63 V
stroke
1545 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 500)]
] -40.0 MCshow
1.000 UL
LTb
2334 384 M
0 63 V
0 4233 R
0 -63 V
stroke
2334 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1000)]
] -40.0 MCshow
1.000 UL
LTb
3123 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3123 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1500)]
] -40.0 MCshow
1.000 UL
LTb
3912 384 M
0 63 V
0 4233 R
0 -63 V
stroke
3912 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2000)]
] -40.0 MCshow
1.000 UL
LTb
4701 384 M
0 63 V
0 4233 R
0 -63 V
stroke
4701 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2500)]
] -40.0 MCshow
1.000 UL
LTb
5490 384 M
0 63 V
0 4233 R
0 -63 V
stroke
5490 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 3000)]
] -40.0 MCshow
1.000 UL
LTb
6279 384 M
0 63 V
0 4233 R
0 -63 V
stroke
6279 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 3500)]
] -40.0 MCshow
1.000 UL
LTb
7068 384 M
0 63 V
0 4233 R
0 -63 V
stroke
7068 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 4000)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
LCb setrgbcolor
264 2532 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Accuracy)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (Rows Learned)]
] -40.0 MCshow
LTb
3912 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (hypothyroid)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6501 1467 M
[ [(Helvetica) 120.0 0.0 true true 0 (Baseline)]
] -40.0 MRshow
LT0
874 4336 Pls
993 4365 Pls
1111 4432 Pls
1229 4465 Pls
1348 4485 Pls
1466 4460 Pls
1584 4475 Pls
1703 4451 Pls
1821 4464 Pls
1940 4474 Pls
2058 4487 Pls
2176 4499 Pls
2295 4508 Pls
2413 4516 Pls
2531 4523 Pls
2650 4533 Pls
2768 4538 Pls
2886 4546 Pls
3005 4553 Pls
3123 4557 Pls
3241 4557 Pls
3360 4560 Pls
3478 4563 Pls
3596 4568 Pls
3715 4572 Pls
3833 4576 Pls
3951 4578 Pls
4070 4582 Pls
4188 4585 Pls
4307 4586 Pls
4425 4589 Pls
4543 4592 Pls
4662 4593 Pls
4780 4596 Pls
4898 4595 Pls
5017 4596 Pls
5135 4596 Pls
5253 4599 Pls
5372 4601 Pls
5490 4601 Pls
5608 4603 Pls
5727 4605 Pls
5845 4607 Pls
5963 4608 Pls
6082 4610 Pls
6200 4610 Pls
6318 4612 Pls
6437 4613 Pls
6555 4615 Pls
6674 4616 Pls
6748 1467 Pls
1.000 UP
1.000 UL
LT1
LTb
6501 1347 M
[ [(Helvetica) 120.0 0.0 true true 0 (Naive Bayes)]
] -40.0 MRshow
LT1
803 4107 Crs
851 4107 Crs
898 4203 Crs
945 4215 Crs
993 4222 Crs
1040 4227 Crs
1087 4271 Crs
1135 4304 Crs
1182 4314 Crs
1229 4308 Crs
1277 4302 Crs
1324 4298 Crs
1371 4305 Crs
1419 4302 Crs
1466 4327 Crs
1513 4322 Crs
1561 4318 Crs
1608 4330 Crs
1655 4341 Crs
1703 4358 Crs
1750 4360 Crs
1797 4368 Crs
1845 4375 Crs
1892 4376 Crs
1940 4382 Crs
1987 4377 Crs
2034 4378 Crs
2082 4373 Crs
2129 4374 Crs
2176 4379 Crs
2224 4384 Crs
2271 4385 Crs
2318 4394 Crs
2366 4394 Crs
2413 4394 Crs
2460 4390 Crs
2508 4386 Crs
2555 4394 Crs
2602 4390 Crs
2650 4390 Crs
2697 4394 Crs
2744 4397 Crs
2792 4400 Crs
2839 4403 Crs
2886 4406 Crs
2934 4409 Crs
2981 4403 Crs
3028 4397 Crs
3076 4402 Crs
3123 4408 Crs
3170 4405 Crs
6748 1347 Crs
1.000 UP
1.000 UL
LT2
LTb
6501 1227 M
[ [(Helvetica) 120.0 0.0 true true 0 (Centroid)]
] -40.0 MRshow
LT2
874 4336 Star
993 4336 Star
1111 4413 Star
1229 4451 Star
1348 4474 Star
1466 4451 Star
1584 4467 Star
1703 4444 Star
1821 4457 Star
1940 4468 Star
2058 4482 Star
2176 4494 Star
2295 4504 Star
2413 4508 Star
2531 4516 Star
2650 4526 Star
2768 4528 Star
2886 4537 Star
3005 4544 Star
3123 4545 Star
3241 4546 Star
3360 4550 Star
3478 4553 Star
3596 4558 Star
3715 4563 Star
3833 4568 Star
3951 4570 Star
4070 4574 Star
4188 4577 Star
4307 4579 Star
4425 4582 Star
4543 4583 Star
4662 4585 Star
4780 4587 Star
4898 4587 Star
5017 4588 Star
5135 4589 Star
5253 4591 Star
5372 4593 Star
5490 4593 Star
5608 4595 Star
5727 4597 Star
5845 4599 Star
5963 4601 Star
6082 4600 Star
6200 4599 Star
6318 4601 Star
6437 4601 Star
6555 4602 Star
6674 4603 Star
6748 1227 Star
1.000 UP
1.000 UL
LT3
LTb
6501 1107 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 0)]
] -40.0 MRshow
LT3
874 4336 Box
993 4365 Box
1111 4413 Box
1229 4408 Box
1348 4417 Box
1466 4355 Box
1584 4369 Box
1703 4358 Box
1821 4368 Box
1940 4382 Box
2058 4378 Box
2176 4384 Box
2295 4394 Box
2413 4398 Box
2531 4405 Box
2650 4412 Box
2768 4424 Box
2886 4438 Box
3005 4445 Box
3123 4445 Box
3241 4440 Box
3360 4433 Box
3478 4436 Box
3596 4437 Box
3715 4437 Box
3833 4440 Box
3951 4442 Box
4070 4439 Box
4188 4441 Box
4307 4441 Box
4425 4442 Box
4543 4435 Box
4662 4437 Box
4780 4441 Box
4898 4439 Box
5017 4441 Box
5135 4443 Box
5253 4443 Box
5372 4444 Box
5490 4441 Box
5608 4444 Box
5727 4447 Box
5845 4450 Box
5963 4447 Box
6082 4448 Box
6200 4447 Box
6318 4445 Box
6437 4450 Box
6555 4447 Box
6674 4446 Box
6748 1107 Box
1.000 UP
1.000 UL
LT4
LTb
6501 987 M
[ [(Helvetica) 120.0 0.0 true true 0 (Weighted 1)]
] -40.0 MRshow
LT4
874 4336 BoxF
993 4336 BoxF
1111 4394 BoxF
1229 4379 BoxF
1348 4359 BoxF
1466 4308 BoxF
1584 4328 BoxF
1703 4322 BoxF
1821 4336 BoxF
1940 4354 BoxF
2058 4347 BoxF
2176 4341 BoxF
2295 4345 BoxF
2413 4353 BoxF
2531 4348 BoxF
2650 4351 BoxF
2768 4370 BoxF
2886 4381 BoxF
3005 4385 BoxF
3123 4385 BoxF
3241 4377 BoxF
3360 4370 BoxF
3478 4371 BoxF
3596 4375 BoxF
3715 4378 BoxF
3833 4380 BoxF
3951 4383 BoxF
4070 4381 BoxF
4188 4384 BoxF
4307 4386 BoxF
4425 4388 BoxF
4543 4383 BoxF
4662 4387 BoxF
4780 4392 BoxF
4898 4392 BoxF
5017 4395 BoxF
5135 4397 BoxF
5253 4398 BoxF
5372 4399 BoxF
5490 4398 BoxF
5608 4401 BoxF
5727 4405 BoxF
5845 4408 BoxF
5963 4407 BoxF
6082 4409 BoxF
6200 4407 BoxF
6318 4405 BoxF
6437 4410 BoxF
6555 4409 BoxF
6674 4408 BoxF
6748 987 BoxF
1.000 UP
1.000 UL
LT5
LTb
6501 867 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MRshow
LT5
874 4336 Circle
993 4336 Circle
1111 4413 Circle
1229 4451 Circle
1348 4474 Circle
1466 4451 Circle
1584 4467 Circle
1703 4444 Circle
1821 4457 Circle
1940 4468 Circle
2058 4482 Circle
2176 4494 Circle
2295 4504 Circle
2413 4508 Circle
2531 4516 Circle
2650 4526 Circle
2768 4528 Circle
2886 4537 Circle
3005 4544 Circle
3123 4545 Circle
3241 4546 Circle
3360 4550 Circle
3478 4553 Circle
3596 4558 Circle
3715 4563 Circle
3833 4568 Circle
3951 4570 Circle
4070 4574 Circle
4188 4577 Circle
4307 4579 Circle
4425 4582 Circle
4543 4583 Circle
4662 4585 Circle
4780 4587 Circle
4898 4587 Circle
5017 4588 Circle
5135 4589 Circle
5253 4591 Circle
5372 4593 Circle
5490 4593 Circle
5608 4595 Circle
5727 4597 Circle
5845 4599 Circle
5963 4601 Circle
6082 4600 Circle
6200 4599 Circle
6318 4601 Circle
6437 4601 Circle
6555 4602 Circle
6674 4603 Circle
6748 867 Circle
1.000 UP
1.000 UL
LT6
LTb
6501 747 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .10)]
] -40.0 MRshow
LT6
874 4394 CircleF
993 4451 CircleF
1111 4508 CircleF
1229 4551 CircleF
1348 4565 CircleF
1466 4575 CircleF
1584 4590 CircleF
1703 4594 CircleF
1821 4604 CircleF
1940 4611 CircleF
2058 4618 CircleF
2176 4623 CircleF
2295 4627 CircleF
2413 4627 CircleF
2531 4630 CircleF
2650 4633 CircleF
2768 4636 CircleF
2886 4639 CircleF
3005 4641 CircleF
3123 4643 CircleF
3241 4642 CircleF
3360 4644 CircleF
3478 4643 CircleF
3596 4644 CircleF
3715 4646 CircleF
3833 4647 CircleF
3951 4648 CircleF
4070 4649 CircleF
4188 4650 CircleF
4307 4651 CircleF
4425 4652 CircleF
4543 4653 CircleF
4662 4654 CircleF
4780 4655 CircleF
4898 4655 CircleF
5017 4656 CircleF
5135 4655 CircleF
5253 4656 CircleF
5372 4657 CircleF
5490 4657 CircleF
5608 4658 CircleF
5727 4658 CircleF
5845 4659 CircleF
5963 4659 CircleF
6082 4660 CircleF
6200 4660 CircleF
6318 4661 CircleF
6437 4661 CircleF
6555 4661 CircleF
6674 4662 CircleF
6748 747 CircleF
1.000 UP
1.000 UL
LT7
LTb
6501 627 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .25)]
] -40.0 MRshow
LT7
874 4451 TriU
993 4565 TriU
1111 4604 TriU
1229 4623 TriU
1348 4634 TriU
1466 4642 TriU
1584 4647 TriU
1703 4651 TriU
1821 4655 TriU
1940 4657 TriU
2058 4659 TriU
2176 4661 TriU
2295 4662 TriU
2413 4664 TriU
2531 4665 TriU
2650 4666 TriU
2768 4667 TriU
2886 4667 TriU
3005 4668 TriU
3123 4669 TriU
3241 4666 TriU
3360 4667 TriU
3478 4668 TriU
3596 4668 TriU
3715 4669 TriU
3833 4669 TriU
3951 4669 TriU
4070 4670 TriU
4188 4670 TriU
4307 4670 TriU
4425 4671 TriU
4543 4671 TriU
4662 4671 TriU
4780 4672 TriU
4898 4672 TriU
5017 4672 TriU
5135 4671 TriU
5253 4671 TriU
5372 4671 TriU
5490 4671 TriU
5608 4672 TriU
5727 4672 TriU
5845 4672 TriU
5963 4672 TriU
6082 4672 TriU
6200 4673 TriU
6318 4673 TriU
6437 4673 TriU
6555 4673 TriU
6674 4673 TriU
6748 627 TriU
1.000 UP
1.000 UL
LT8
LTb
6501 507 M
[ [(Helvetica) 120.0 0.0 true true 0 (Alpha .50)]
] -40.0 MRshow
LT8
874 4508 TriUF
993 4594 TriUF
1111 4623 TriUF
1229 4637 TriUF
1348 4646 TriUF
1466 4651 TriUF
1584 4655 TriUF
1703 4659 TriUF
1821 4661 TriUF
1940 4663 TriUF
2058 4664 TriUF
2176 4666 TriUF
2295 4667 TriUF
2413 4668 TriUF
2531 4669 TriUF
2650 4669 TriUF
2768 4670 TriUF
2886 4670 TriUF
3005 4671 TriUF
3123 4671 TriUF
3241 4669 TriUF
3360 4670 TriUF
3478 4670 TriUF
3596 4670 TriUF
3715 4671 TriUF
3833 4671 TriUF
3951 4672 TriUF
4070 4672 TriUF
4188 4672 TriUF
4307 4672 TriUF
4425 4673 TriUF
4543 4673 TriUF
4662 4673 TriUF
4780 4673 TriUF
4898 4673 TriUF
5017 4674 TriUF
5135 4674 TriUF
5253 4674 TriUF
5372 4674 TriUF
5490 4674 TriUF
5608 4674 TriUF
5727 4675 TriUF
5845 4675 TriUF
5963 4675 TriUF
6082 4675 TriUF
6200 4675 TriUF
6318 4675 TriUF
6437 4675 TriUF
6555 4675 TriUF
6674 4675 TriUF
6748 507 TriUF
1.000 UL
LTb
756 4680 N
756 384 L
6312 0 V
0 4296 V
-6312 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
