(defun onerd (tbl)
  (let ((bins nil)
        (average-list nil)
        (sorted-rows nil))
    (dolist (row (table-all tbl))
      (let ((n 0)
            (average 0))
        (dolist (col (table-columns tbl))
          (when (numericp (header-name col))
            (incf average (nth n (eg-features row))))
          (incf n))
        (push average average-list)))
    (let ((sort-list (qsort average-list)))
      (dolist (cur-avg sort-list)
        (dotimes (i (f tbl))
          (when (= cur-avg (nth i average-list))
            (push (nth i (table-all tbl)) sorted-rows)))))
    (let ((n 0)
          (current-bin nil))
      (dolist (row sorted-rows)
        (if (< n 6)
            (progn
              (push row current-bin)
              (incf n))
            (if (samep (eg-class (car current-bin)) (eg-class row))
                (push row current-bin)
                (progn
                  (push current-bin bins)
                  (setf current-bin nil)
                  (setf n 0)))))
      (push current-bin bins))
    bins))
